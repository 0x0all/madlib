-- Example usage for regression:
-- \i online_sv.sql_in
select madlib.svm_generate_reg_data('madlib.svm_train_data', 10000, 5);
psql:online_sv_test.sql:4: NOTICE:  table "svm_train_data" does not exist, skipping
CONTEXT:  SQL statement "drop table if exists madlib.svm_train_data"
 svm_generate_reg_data 
-----------------------
 
(1 row)

select * from madlib.svm_regression('madlib.svm_train_data', 'regs', false, 'madlib.svm_dot');
 model_table | model_name | inds  |    cum_err    | epsilon | b | nsvs 
-------------+------------+-------+---------------+---------+---+------
 regs        | regs       | 10000 | 94605.7238925 |    27.1 | 1 |  321
(1 row)

select madlib.svm_predict('regs', '{1,2,4,20,10}', 'madlib.svm_dot') > 0;
 ?column? 
----------
 t
(1 row)

select madlib.svm_predict('regs', '{1,2,4,20,-10}', 'madlib.svm_dot') < 0;
 ?column? 
----------
 t
(1 row)

   
-- To learn multiple support vector regression models
select * from madlib.svm_regression('madlib.svm_train_data', 'regp', true, 'madlib.svm_dot');
 model_table | model_name | inds |    cum_err    | epsilon | b | nsvs 
-------------+------------+------+---------------+---------+---+------
 regp        | regp1      | 4999 | 36947.2748072 | 18.7005 | 1 |  212
 regp        | regp0      | 5001 | 52297.1520508 | 32.5995 | 1 |  351
(2 rows)

select pred.prediction > 0 from madlib.svm_predict_combo('regp', '{1,2,4,20,10}', 'madlib.svm_dot') as pred;
 ?column? 
----------
 t
 t
 t
(3 rows)

select pred.prediction < 0 from madlib.svm_predict_combo('regp', '{1,2,4,20,-10}', 'madlib.svm_dot') as pred;
 ?column? 
----------
 t
 t
 t
(3 rows)

-- Score data points stored in a table
create table madlib.svm_reg_test ( id int, ind float8[] );
psql:online_sv_test.sql:16: NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'id' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into madlib.svm_reg_test (select id, ind from madlib.svm_train_data limit 20);
select madlib.svm_predict('madlib.svm_reg_test', 'ind', 'id', 'regs', 'madlib.svm_reg_output1', false, 'madlib.svm_dot');
psql:online_sv_test.sql:19: NOTICE:  table "svm_reg_output1" does not exist, skipping
CONTEXT:  SQL statement "drop table if exists madlib.svm_reg_output1"
                                                    svm_predict                                                     
--------------------------------------------------------------------------------------------------------------------
 Finished processing data points in madlib.svm_reg_test table; results are stored in madlib.svm_reg_output1 table. 
            
(1 row)

select * from madlib.svm_reg_output1;
 id |    prediction     
----+-------------------
 23 |  49.3700789135776
  3 | -58.5170800084389
 21 |  44.2194521313621
 27 | -54.6889228901117
 39 | -42.2074681969844
 19 |  49.3973555540196
 11 | -40.1396322122707
 33 |  53.2045572493316
 29 | -58.2017570108099
 13 |  33.5717733790325
 25 |  -39.970270920066
 37 |  45.1346246315864
  5 | -35.6477974462615
 15 |  -50.113166981181
  9 | -50.6994028035963
 17 | -61.7909218667523
 31 |  47.9831576549096
  1 | -41.3469253244368
  7 | -45.5528594320962
 35 | -46.6806634034379
(20 rows)

select madlib.svm_predict('madlib.svm_reg_test', 'ind', 'id', 'regp', 'madlib.svm_reg_output2', true, 'madlib.svm_dot');
psql:online_sv_test.sql:22: NOTICE:  table "svm_reg_output2" does not exist, skipping
CONTEXT:  SQL statement "drop table if exists madlib.svm_reg_output2"
                                                    svm_predict                                                     
--------------------------------------------------------------------------------------------------------------------
 Finished processing data points in madlib.svm_reg_test table; results are stored in madlib.svm_reg_output2 table. 
            
(1 row)

select * from madlib.svm_reg_output2;
 id |    prediction     
----+-------------------
 23 |  56.3011099387812
  3 | -56.6795135431705
 21 |  58.7384873443806
 27 | -46.0826715310307
 39 | -51.6836005202123
 19 |  57.1521394694494
 11 | -59.5288162020577
 33 |  55.7151454777359
 29 | -54.8062100545001
 13 |  57.8816203380187
 25 | -48.4149860172469
 37 |  53.3775621035437
  5 |  -58.802007336394
 15 | -52.1817234215229
  9 | -48.6464463623529
 17 | -51.8209455906584
 31 |  58.6666126226322
  1 | -57.1693212974089
  7 | -51.0751787449942
 35 | -47.4898285604782
(20 rows)

-- Example usage for classification:
select madlib.svm_generate_cls_data('madlib.svm_train_data', 10000, 4);
 svm_generate_cls_data 
-----------------------
 
(1 row)

select * from madlib.svm_classification('madlib.svm_train_data', 'clss', false, 'madlib.svm_dot');
 model_table | model_name | inds  | cum_err |  rho  |  b  | nsvs 
-------------+------------+-------+---------+-------+-----+------
 clss        | clss       | 10000 |    1640 | -15.8 | -11 |  208
(1 row)

select madlib.svm_predict('clss', '{10,-20,5,5}', 'madlib.svm_dot') > 0;
 ?column? 
----------
 t
(1 row)

select madlib.svm_predict('clss', '{-10,20,5,5}', 'madlib.svm_dot') < 0;
 ?column? 
----------
 t
(1 row)

-- To learn multiple support vector models, replace the above by 
select * from madlib.svm_classification('madlib.svm_train_data', 'clsp', true, 'madlib.svm_dot');
 model_table | model_name | inds | cum_err |   rho    |  b   | nsvs 
-------------+------------+------+---------+----------+------+------
 clsp        | clsp1      | 4999 |     553 | -10.3005 | -8.2 |  128
 clsp        | clsp0      | 5001 |    1133 | -14.8995 | -9.4 |  174
(2 rows)

select pred.prediction > 0 from madlib.svm_predict_combo('clsp', '{10,-20,5,5}', 'madlib.svm_dot') as pred;
 ?column? 
----------
 t
 t
 t
(3 rows)

select pred.prediction < 0 from madlib.svm_predict_combo('clsp', '{-10,20,5,5}', 'madlib.svm_dot') as pred;
 ?column? 
----------
 t
 t
 t
(3 rows)

-- Example usage for novelty detection:
select madlib.svm_generate_nd_data('madlib.svm_train_data', 10000, 4);
 svm_generate_nd_data 
----------------------
 
(1 row)

select * from madlib.svm_novelty_detection('madlib.svm_train_data', 'nds', false, 'madlib.svm_dot');
 model_table | model_name | inds  |  rho  | nsvs 
-------------+------------+-------+-------+------
 nds         | nds        | 10000 | -13.9 |  239
(1 row)

select madlib.svm_predict('nds', '{10,-5,2,2}', 'madlib.svm_dot') > 0;  
 ?column? 
----------
 f
(1 row)

select madlib.svm_predict('nds', '{-1,-1,2,2}', 'madlib.svm_dot') < 0;  
 ?column? 
----------
 t
(1 row)

drop table madlib.svm_train_data;
drop table madlib.svm_reg_test;
drop table madlib.svm_reg_output1;
drop table madlib.svm_reg_output2;
drop table regs;
drop table regp;
drop table clss;
drop table clsp;
drop table nds;
