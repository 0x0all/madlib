\i sketches.sql
DROP FUNCTION IF EXISTS  big_or(bitmap1 bytea, bitmap2 bytea) CASCADE;
CREATE FUNCTION big_or(bitmap1 bytea, bitmap2 bytea)
RETURNS bytea
AS '$libdir/sketches'
LANGUAGE C STRICT;
DROP FUNCTION IF EXISTS fmsketch_trans(bitmaps bytea, input anyelement) CASCADE;
psql:sketches.sql:7: NOTICE:  drop cascades to function fmcount(anyelement)
CREATE FUNCTION fmsketch_trans(bitmaps bytea, input anyelement) 
RETURNS bytea 
AS '$libdir/sketches'
LANGUAGE C STRICT;
DROP FUNCTION IF EXISTS fmsketch_getcount(bitmaps bytea) CASCADE;
CREATE FUNCTION fmsketch_getcount(bitmaps bytea) 
RETURNS int8 
AS '$libdir/sketches'
LANGUAGE C STRICT;
DROP FUNCTION IF EXISTS fmsketch_merge(bitmaps1 bytea, bitmaps2 bytea) CASCADE;
CREATE FUNCTION fmsketch_merge(bitmaps1 bytea, bitmaps2 bytea) 
RETURNS bytea 
AS '$libdir/sketches'
LANGUAGE C STRICT;
DROP AGGREGATE IF EXISTS fmcount(anyelement);
psql:sketches.sql:25: NOTICE:  aggregate fmcount(anyelement) does not exist, skipping
CREATE AGGREGATE fmcount(anyelement)
(
    sfunc = fmsketch_trans,
    stype = bytea, 
    finalfunc = fmsketch_getcount,
--  UNCOMMENT THE NEXT LINE TO PARALLELIZE ON GREENPLUM
--    prefunc = fmsketch_merge,
    initcond = '' 
);
DROP FUNCTION IF EXISTS cmsketch_trans(bytea, int8) CASCADE;
psql:sketches.sql:36: NOTICE:  drop cascades to function cmsketch(bigint)
CREATE FUNCTION cmsketch_trans(bitmaps bytea, input int8) 
RETURNS bytea 
AS '$libdir/sketches'
LANGUAGE C STRICT;
DROP FUNCTION IF EXISTS cmsketch_out(bytea) CASCADE;
CREATE FUNCTION cmsketch_out(counters bytea) 
RETURNS bytea 
AS '$libdir/sketches'
LANGUAGE C STRICT;
DROP FUNCTION IF EXISTS cmsketch_combine(bytea, bytea) CASCADE;
CREATE FUNCTION cmsketch_combine(bytea, bytea) 
RETURNS bytea
AS '$libdir/sketches'
LANGUAGE C STRICT;
DROP AGGREGATE IF EXISTS cmsketch(int8);
psql:sketches.sql:54: NOTICE:  aggregate cmsketch(int8) does not exist, skipping
CREATE AGGREGATE cmsketch(int8)
(
    sfunc = cmsketch_trans,
    stype = bytea, 
    finalfunc = cmsketch_out,
    initcond = ''
--  UNCOMMENT THE NEXT LINE TO PARALLELIZE ON GREENPLUM
--    , prefunc = cmsketch_combine
);
DROP FUNCTION IF EXISTS cmsketch_getcount(bytea, int8) CASCADE;
CREATE FUNCTION cmsketch_getcount(counters bytea, val int8) 
RETURNS int8 
AS '$libdir/sketches'
LANGUAGE C STRICT;
DROP FUNCTION IF EXISTS cmsketch_rangecount(bytea, int8, int8) CASCADE;
CREATE FUNCTION cmsketch_rangecount(bytea, int8, int8)
RETURNS int8
AS '$libdir/sketches'
LANGUAGE C STRICT;
DROP FUNCTION IF EXISTS cmsketch_centile(bytea, int4) CASCADE;
CREATE FUNCTION cmsketch_centile(bytea, int4)
RETURNS int8
AS '$libdir/sketches'
LANGUAGE C STRICT;
DROP FUNCTION IF EXISTS cmsketch_width_histogram(bytea, int8, int8, int4) CASCADE;
CREATE FUNCTION cmsketch_width_histogram(bytea, int8, int8, int4)
RETURNS int8[]
AS '$libdir/sketches'
LANGUAGE C STRICT;
DROP FUNCTION IF EXISTS cmsketch_depth_histogram(bytea, int4) CASCADE;
CREATE FUNCTION cmsketch_depth_histogram(bytea, int4)
RETURNS int8[]
AS '$libdir/sketches'
LANGUAGE C STRICT;
-- Basic methods
select cmsketch_getcount(cmsketch(i),5) from generate_series(1,10000) as T(i);
 cmsketch_getcount 
-------------------
                10
(1 row)

select cmsketch_rangecount(cmsketch(i),1,1025) from generate_series(1,10000) as T(i);
 cmsketch_rangecount 
---------------------
                1033
(1 row)

select cmsketch_width_histogram(cmsketch(i), min(i), max(i), 4) from generate_series(1,10000) as R(i);
                            cmsketch_width_histogram                            
--------------------------------------------------------------------------------
 [0:3][0:2]={{1,2500,2511},{2501,5000,2515},{5001,7500,2516},{7501,10000,2516}}
(1 row)

select min(i),
       cmsketch_centile(cmsketch(i), 25) AS quartile1, 
       cmsketch_centile(cmsketch(i), 50) AS quartile2, 
       cmsketch_centile(cmsketch(i), 75) AS quartile3,
       max(i) 
  from generate_series(1,10000) as R(i);
 min | quartile1 | quartile2 | quartile3 |  max  
-----+-----------+-----------+-----------+-------
   1 |      2494 |      4994 |      7494 | 10000
(1 row)

select cmsketch_depth_histogram(cmsketch(i), 4) from generate_series(1,10000) as R(i);
                                             cmsketch_depth_histogram                                             
------------------------------------------------------------------------------------------------------------------
 [0:3][0:2]={{-4611686018427387904,2494,2506},{2495,4994,2515},{4995,7494,2520},{7495,4611686018427387903,10000}}
(1 row)

-- tests for all-NULL column
-- select cmsketch(NULL) from generate_series(1,10000) as R(i) where i < 0;
select cmsketch_rangecount(cmsketch(i), 1,200) from generate_series(1,10000) as R(i);
 cmsketch_rangecount 
---------------------
                 213
(1 row)

select cmsketch_centile(cmsketch(NULL), 2) from generate_series(1,10000) as R(i) where i < 0;
 cmsketch_centile 
------------------
                 
(1 row)

