-------------------
To Do:
-------------------
1) Comment, clean up and review setup.sql.
2) Finish kmeans.py
3) Write a regression test.

-------------------
General Info:
-------------------

This module implements "k-means clustering" method for a set of data points stored in a table (kmeans_input_points).
Centroids are found as described in k-means++ algorithm. Further adjustment/calculation is based on a sample of points 
such that there are at least 200 points from each cluster.

This module requires: Greenplum SVEC implementation.

-------------------
Installation:
-------------------

Execute "setup.sql". Example: psql -f setup.sql

-------------------
Usage:
-------------------

1) Prepare the input table/view of the following name and structure:

	CREATE TABLE madlib.kmeans_input(
		pid 		INT,  	-- point ID
		position 	SVEC	-- coordinates
	);

2) Run: psql -c "select madlib.kmeans_run( 'installation_schema', max_centroids, goodness_test);"

	Where:
	- installation_schema 	- schema name for the k-means method installation
	- max_centroids			- max number of centroids that will be considered (integer)
	- goodness_test			- goodness test flag (0,1)
	
-------------------
Output:
-------------------

1) Centroids table:

	TABLE madlib.kmeans_output_centroids (
		cid 		INT,	-- Centroid ID
		position 	SVEC	-- Centroid coordinates
	);

1) Points assignment table:

	TABLE madlib.kmeans_output_centroids (
		pid 		INT,	-- Point ID
		position 	SVEC,	-- Point coordinates
		cid 		INT		-- Assigned Centroid ID
	);

