-- Unit-Testing checklist
-- 1. Make sure the function does the right thing on normal input(s).
-- 2. Make sure the function is non-destructive to the input(s).
-- 3. Make sure the function handles null values in svecs correctly.
-- 4. Make sure the function handles length-1 svecs correctly.
-- 5. Make sure the function handles null svecs properly.
-- 6. For functions that handle float8[] input(s), make sure the two
--    representations of null values are handled properly.
-- \timing
\i gp_svec.sql.in
-- @namespace sparse_vectors
-- DROP SCHEMA MADLIB_SCHEMA CASCADE;
CREATE SCHEMA MADLIB_SCHEMA;
DROP TYPE IF EXISTS MADLIB_SCHEMA.svec CASCADE;
psql:gp_svec.sql.in:5: NOTICE:  type "madlib_schema.svec" does not exist, skipping
CREATE TYPE MADLIB_SCHEMA.svec;
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_in(cstring)
    RETURNS MADLIB_SCHEMA.svec
    AS 'gp_svec.so'
    LANGUAGE C IMMUTABLE STRICT;
psql:gp_svec.sql.in:11: NOTICE:  return type madlib_schema.svec is only a shell
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_out(MADLIB_SCHEMA.svec)
    RETURNS cstring
    AS 'gp_svec.so'
    LANGUAGE C IMMUTABLE STRICT;
psql:gp_svec.sql.in:16: NOTICE:  argument type madlib_schema.svec is only a shell
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_recv(internal)
    RETURNS MADLIB_SCHEMA.svec
    AS 'gp_svec.so'
    LANGUAGE C IMMUTABLE STRICT;
psql:gp_svec.sql.in:21: NOTICE:  return type madlib_schema.svec is only a shell
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_send(MADLIB_SCHEMA.svec)
    RETURNS bytea
    AS 'gp_svec.so'
    LANGUAGE C IMMUTABLE STRICT;
psql:gp_svec.sql.in:26: NOTICE:  argument type madlib_schema.svec is only a shell
CREATE TYPE MADLIB_SCHEMA.svec (
       internallength = VARIABLE, 
       input = MADLIB_SCHEMA.svec_in,
       output = MADLIB_SCHEMA.svec_out,
       send = MADLIB_SCHEMA.svec_send,
       receive = MADLIB_SCHEMA.svec_recv,
       storage=EXTENDED,
       alignment = double
);
-- Basic floating point scalar operators MIN,MAX
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.dmin(float8,float8) RETURNS float8 AS 'gp_svec.so', 'float8_min' LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.dmax(float8,float8) RETURNS float8 AS 'gp_svec.so', 'float8_max' LANGUAGE C IMMUTABLE; 
-- Aggregate related functions
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_count(MADLIB_SCHEMA.svec,MADLIB_SCHEMA.svec) RETURNS MADLIB_SCHEMA.svec 
AS 'gp_svec.so', 'svec_count' STRICT LANGUAGE C IMMUTABLE; 
-- Scalar operator functions
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_plus(MADLIB_SCHEMA.svec,MADLIB_SCHEMA.svec) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'svec_plus' STRICT LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_minus(MADLIB_SCHEMA.svec,MADLIB_SCHEMA.svec) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'svec_minus' STRICT LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.log(MADLIB_SCHEMA.svec) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'svec_log' STRICT LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_div(MADLIB_SCHEMA.svec,MADLIB_SCHEMA.svec) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'svec_div' STRICT LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_mult(MADLIB_SCHEMA.svec,MADLIB_SCHEMA.svec) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'svec_mult' STRICT LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_pow(MADLIB_SCHEMA.svec,MADLIB_SCHEMA.svec) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'svec_pow' STRICT LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_eq(MADLIB_SCHEMA.svec,MADLIB_SCHEMA.svec) RETURNS boolean AS 'gp_svec.so', 'svec_eq' STRICT LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.float8arr_eq(float8[],float8[]) RETURNS boolean AS 'gp_svec.so', 'float8arr_equals' LANGUAGE C IMMUTABLE;
-- Permutation of float8[] and svec for basic functions minus,plus,mult,div
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.float8arr_minus_float8arr(float8[],float8[]) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'float8arr_minus_float8arr' LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.float8arr_minus_svec(float8[],MADLIB_SCHEMA.svec) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'float8arr_minus_svec' LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_minus_float8arr(MADLIB_SCHEMA.svec,float8[]) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'svec_minus_float8arr' LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.float8arr_plus_float8arr(float8[],float8[]) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'float8arr_plus_float8arr' LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.float8arr_plus_svec(float8[],MADLIB_SCHEMA.svec) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'float8arr_plus_svec' LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_plus_float8arr(MADLIB_SCHEMA.svec,float8[]) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'svec_plus_float8arr' LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.float8arr_mult_float8arr(float8[],float8[]) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'float8arr_mult_float8arr' LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.float8arr_mult_svec(float8[],MADLIB_SCHEMA.svec) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'float8arr_mult_svec' LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_mult_float8arr(MADLIB_SCHEMA.svec,float8[]) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'svec_mult_float8arr' LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.float8arr_div_float8arr(float8[],float8[]) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'float8arr_div_float8arr' LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.float8arr_div_svec(float8[],MADLIB_SCHEMA.svec) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'float8arr_div_svec' LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_div_float8arr(MADLIB_SCHEMA.svec,float8[]) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'svec_div_float8arr' LANGUAGE C IMMUTABLE;
-- Vector operator functions
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.dot(MADLIB_SCHEMA.svec,MADLIB_SCHEMA.svec) RETURNS float8 AS 'gp_svec.so', 'svec_dot' STRICT LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.dot(float8[],float8[]) RETURNS float8 AS 'gp_svec.so', 'float8arr_dot' STRICT LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.dot(MADLIB_SCHEMA.svec,float8[]) RETURNS float8 AS 'gp_svec.so', 'svec_dot_float8arr' STRICT LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.dot(float8[],MADLIB_SCHEMA.svec) RETURNS float8 AS 'gp_svec.so', 'float8arr_dot_svec' STRICT LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.l2norm(MADLIB_SCHEMA.svec) RETURNS float8 AS 'gp_svec.so', 'svec_l2norm' STRICT LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.l2norm(float8[]) RETURNS float8 AS 'gp_svec.so', 'float8arr_l2norm' LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.l1norm(MADLIB_SCHEMA.svec) RETURNS float8 AS 'gp_svec.so', 'svec_l1norm' STRICT LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.l1norm(float8[]) RETURNS float8 AS 'gp_svec.so', 'float8arr_l1norm' STRICT LANGUAGE C IMMUTABLE; 
-- Unnest an svec into a table of uncompressed values  
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.unnest(MADLIB_SCHEMA.svec) RETURNS setof float8  AS 'gp_svec.so', 'svec_unnest' LANGUAGE C IMMUTABLE; 
-- Appends an element to the back of an svec
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.vec_pivot(MADLIB_SCHEMA.svec,float8) RETURNS MADLIB_SCHEMA.svec  AS 'gp_svec.so', 'svec_pivot' LANGUAGE C IMMUTABLE; 
-- Sums the elements of an svec/float8[]
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.vec_sum(MADLIB_SCHEMA.svec) RETURNS float8 AS 'gp_svec.so', 'svec_summate' STRICT LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.vec_sum(float8[]) RETURNS float8 AS 'gp_svec.so', 'float8arr_summate' STRICT LANGUAGE C IMMUTABLE; 
-- Computes the median element of an svec/float8[]
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.vec_median(float8[]) RETURNS float8 AS 'gp_svec.so', 'float8arr_median' STRICT LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.vec_median(MADLIB_SCHEMA.svec) RETURNS float8 AS 'gp_svec.so', 'svec_median' STRICT LANGUAGE C IMMUTABLE; 
-- Casts and transforms
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_cast_int2(int2) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'svec_cast_int2' STRICT LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_cast_int4(int4) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'svec_cast_int4' STRICT LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_cast_int8(bigint) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'svec_cast_int8' STRICT LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_cast_float4(float4) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'svec_cast_float4' STRICT LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_cast_float8(float8) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'svec_cast_float8' STRICT LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_cast_numeric(numeric) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'svec_cast_numeric' STRICT LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.float8arr_cast_int2(int2) RETURNS float8[] AS 'gp_svec.so', 'float8arr_cast_int2' STRICT LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.float8arr_cast_int4(int4) RETURNS float8[] AS 'gp_svec.so', 'float8arr_cast_int4' STRICT LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.float8arr_cast_int8(bigint) RETURNS float8[] AS 'gp_svec.so', 'float8arr_cast_int8' STRICT LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.float8arr_cast_float4(float4) RETURNS float8[] AS 'gp_svec.so', 'float8arr_cast_float4' STRICT LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.float8arr_cast_float8(float8) RETURNS float8[] AS 'gp_svec.so', 'float8arr_cast_float8' STRICT LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.float8arr_cast_numeric(numeric) RETURNS float8[] AS 'gp_svec.so', 'float8arr_cast_numeric' STRICT LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_cast_float8arr(float8[]) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'svec_cast_float8arr' STRICT LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_return_array(MADLIB_SCHEMA.svec) RETURNS float8[] AS 'gp_svec.so', 'svec_return_array' LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_concat(MADLIB_SCHEMA.svec,MADLIB_SCHEMA.svec) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'svec_concat' LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_concat_replicate(int4,MADLIB_SCHEMA.svec) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'svec_concat_replicate' LANGUAGE C IMMUTABLE; 
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.dimension(MADLIB_SCHEMA.svec) RETURNS integer AS 'gp_svec.so', 'svec_dimension' LANGUAGE C IMMUTABLE; 
-- Higher-order functions
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_lapply(text,MADLIB_SCHEMA.svec) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'svec_lapply' LANGUAGE C IMMUTABLE;
-- svec access and modification functions
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_append(MADLIB_SCHEMA.svec,float8,int8) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'svec_append' LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_proj(MADLIB_SCHEMA.svec,int4) RETURNS float8 AS 'gp_svec.so', 'svec_proj' LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_subvec(MADLIB_SCHEMA.svec,int4,int4) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'svec_subvec' LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_reverse(MADLIB_SCHEMA.svec) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'svec_reverse' LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_change(MADLIB_SCHEMA.svec,int4,MADLIB_SCHEMA.svec) RETURNS MADLIB_SCHEMA.svec AS 'gp_svec.so', 'svec_change' LANGUAGE C IMMUTABLE;
-- Sparse Feature Vector (text processing) related functions
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.gp_extract_feature_histogram(text[], text[]) RETURNS MADLIB_SCHEMA.svec 
AS 'gp_svec.so', 'gp_extract_feature_histogram' LANGUAGE C IMMUTABLE; 
DROP OPERATOR IF EXISTS || ( MADLIB_SCHEMA.svec, MADLIB_SCHEMA.svec);
psql:gp_svec.sql.in:130: NOTICE:  operator || does not exist, skipping
DROP OPERATOR IF EXISTS - ( MADLIB_SCHEMA.svec, MADLIB_SCHEMA.svec);
psql:gp_svec.sql.in:131: NOTICE:  operator - does not exist, skipping
DROP OPERATOR IF EXISTS + ( MADLIB_SCHEMA.svec, MADLIB_SCHEMA.svec);
psql:gp_svec.sql.in:132: NOTICE:  operator + does not exist, skipping
DROP OPERATOR IF EXISTS / ( MADLIB_SCHEMA.svec, MADLIB_SCHEMA.svec);
psql:gp_svec.sql.in:133: NOTICE:  operator / does not exist, skipping
DROP OPERATOR IF EXISTS %*% ( MADLIB_SCHEMA.svec, MADLIB_SCHEMA.svec);
psql:gp_svec.sql.in:134: NOTICE:  operator %*% does not exist, skipping
DROP OPERATOR IF EXISTS * ( MADLIB_SCHEMA.svec, MADLIB_SCHEMA.svec);
psql:gp_svec.sql.in:135: NOTICE:  operator * does not exist, skipping
DROP OPERATOR IF EXISTS ^ ( MADLIB_SCHEMA.svec, MADLIB_SCHEMA.svec);
psql:gp_svec.sql.in:136: NOTICE:  operator ^ does not exist, skipping
CREATE OPERATOR || (
	LEFTARG = MADLIB_SCHEMA.svec,
	RIGHTARG = MADLIB_SCHEMA.svec,
	PROCEDURE = MADLIB_SCHEMA.svec_concat
);
CREATE OPERATOR - (
	LEFTARG = MADLIB_SCHEMA.svec,
	RIGHTARG = MADLIB_SCHEMA.svec,
	PROCEDURE = MADLIB_SCHEMA.svec_minus
);
CREATE OPERATOR + (
	LEFTARG = MADLIB_SCHEMA.svec,
	RIGHTARG = MADLIB_SCHEMA.svec,
	PROCEDURE = MADLIB_SCHEMA.svec_plus
);
CREATE OPERATOR / (
	LEFTARG = MADLIB_SCHEMA.svec,
	RIGHTARG = MADLIB_SCHEMA.svec,
	PROCEDURE = MADLIB_SCHEMA.svec_div
);
CREATE OPERATOR %*% (
	LEFTARG = MADLIB_SCHEMA.svec,
	RIGHTARG = MADLIB_SCHEMA.svec,
	PROCEDURE = MADLIB_SCHEMA.dot
);
CREATE OPERATOR * (
	LEFTARG = MADLIB_SCHEMA.svec,
	RIGHTARG = MADLIB_SCHEMA.svec,
	PROCEDURE = MADLIB_SCHEMA.svec_mult
);
CREATE OPERATOR ^ (
	LEFTARG = MADLIB_SCHEMA.svec,
	RIGHTARG = MADLIB_SCHEMA.svec,
	PROCEDURE = MADLIB_SCHEMA.svec_pow
);
-- float8[] operators
DROP OPERATOR IF EXISTS = ( float8[], float8[]);
psql:gp_svec.sql.in:177: NOTICE:  operator = does not exist, skipping
DROP OPERATOR IF EXISTS %*% ( float8[], MADLIB_SCHEMA.svec);
psql:gp_svec.sql.in:178: NOTICE:  operator %*% does not exist, skipping
DROP OPERATOR IF EXISTS %*% ( MADLIB_SCHEMA.svec, float8[]);
psql:gp_svec.sql.in:179: NOTICE:  operator %*% does not exist, skipping
DROP OPERATOR IF EXISTS %*% ( float8[], float8[]);
psql:gp_svec.sql.in:180: NOTICE:  operator %*% does not exist, skipping
DROP OPERATOR IF EXISTS - ( float8[], float8[]);
psql:gp_svec.sql.in:181: NOTICE:  operator - does not exist, skipping
DROP OPERATOR IF EXISTS + ( float8[], float8[]);
psql:gp_svec.sql.in:182: NOTICE:  operator + does not exist, skipping
DROP OPERATOR IF EXISTS * ( float8[], float8[]);
psql:gp_svec.sql.in:183: NOTICE:  operator * does not exist, skipping
DROP OPERATOR IF EXISTS / ( float8[], float8[]);
psql:gp_svec.sql.in:184: NOTICE:  operator / does not exist, skipping
DROP OPERATOR IF EXISTS - ( float8[], MADLIB_SCHEMA.svec);
psql:gp_svec.sql.in:185: NOTICE:  operator - does not exist, skipping
DROP OPERATOR IF EXISTS + ( float8[], MADLIB_SCHEMA.svec);
psql:gp_svec.sql.in:186: NOTICE:  operator + does not exist, skipping
DROP OPERATOR IF EXISTS * ( float8[], MADLIB_SCHEMA.svec);
psql:gp_svec.sql.in:187: NOTICE:  operator * does not exist, skipping
DROP OPERATOR IF EXISTS / ( float8[], MADLIB_SCHEMA.svec);
psql:gp_svec.sql.in:188: NOTICE:  operator / does not exist, skipping
DROP OPERATOR IF EXISTS - ( MADLIB_SCHEMA.svec, float8[]);
psql:gp_svec.sql.in:189: NOTICE:  operator - does not exist, skipping
DROP OPERATOR IF EXISTS + ( MADLIB_SCHEMA.svec, float8[]);
psql:gp_svec.sql.in:190: NOTICE:  operator + does not exist, skipping
DROP OPERATOR IF EXISTS * ( MADLIB_SCHEMA.svec, float8[]);
psql:gp_svec.sql.in:191: NOTICE:  operator * does not exist, skipping
DROP OPERATOR IF EXISTS / ( MADLIB_SCHEMA.svec, float8[]);
psql:gp_svec.sql.in:192: NOTICE:  operator / does not exist, skipping
CREATE OPERATOR = (
	leftarg = float8[], 
	rightarg = float8[], 
	procedure = MADLIB_SCHEMA.float8arr_eq,
	commutator = = ,
--	negator = <> ,
	restrict = eqsel, join = eqjoinsel
);
CREATE OPERATOR %*% (
	LEFTARG = float8[],
	RIGHTARG = float8[],
	PROCEDURE = MADLIB_SCHEMA.dot
);
CREATE OPERATOR %*% (
	LEFTARG = float8[],
	RIGHTARG = MADLIB_SCHEMA.svec,
	PROCEDURE = MADLIB_SCHEMA.dot
);
CREATE OPERATOR %*% (
	LEFTARG = MADLIB_SCHEMA.svec,
	RIGHTARG = float8[],
	PROCEDURE = MADLIB_SCHEMA.dot
);
CREATE OPERATOR - (
	LEFTARG = float8[],
	RIGHTARG = float8[],
	PROCEDURE = MADLIB_SCHEMA.float8arr_minus_float8arr
);
CREATE OPERATOR + (
	LEFTARG = float8[],
	RIGHTARG = float8[],
	PROCEDURE = MADLIB_SCHEMA.float8arr_plus_float8arr
);
CREATE OPERATOR * (
	LEFTARG = float8[],
	RIGHTARG = float8[],
	PROCEDURE = MADLIB_SCHEMA.float8arr_mult_float8arr
);
CREATE OPERATOR / (
	LEFTARG = float8[],
	RIGHTARG = float8[],
	PROCEDURE = MADLIB_SCHEMA.float8arr_div_float8arr
);
CREATE OPERATOR - (
	LEFTARG = float8[],
	RIGHTARG = MADLIB_SCHEMA.svec,
	PROCEDURE = MADLIB_SCHEMA.float8arr_minus_svec
);
CREATE OPERATOR + (
	LEFTARG = float8[],
	RIGHTARG = MADLIB_SCHEMA.svec,
	PROCEDURE = MADLIB_SCHEMA.float8arr_plus_svec
);
CREATE OPERATOR * (
	LEFTARG = float8[],
	RIGHTARG = MADLIB_SCHEMA.svec,
	PROCEDURE = MADLIB_SCHEMA.float8arr_mult_svec
);
CREATE OPERATOR / (
	LEFTARG = float8[],
	RIGHTARG = MADLIB_SCHEMA.svec,
	PROCEDURE = MADLIB_SCHEMA.float8arr_div_svec
);
CREATE OPERATOR - (
	LEFTARG = MADLIB_SCHEMA.svec,
	RIGHTARG = float8[],
	PROCEDURE = MADLIB_SCHEMA.svec_minus_float8arr
);
CREATE OPERATOR + (
	LEFTARG = MADLIB_SCHEMA.svec,
	RIGHTARG = float8[],
	PROCEDURE = MADLIB_SCHEMA.svec_plus_float8arr
);
CREATE OPERATOR * (
	LEFTARG = MADLIB_SCHEMA.svec,
	RIGHTARG = float8[],
	PROCEDURE = MADLIB_SCHEMA.svec_mult_float8arr
);
CREATE OPERATOR / (
	LEFTARG = MADLIB_SCHEMA.svec,
	RIGHTARG = float8[],
	PROCEDURE = MADLIB_SCHEMA.svec_div_float8arr
);
DROP CAST IF EXISTS (int2 AS MADLIB_SCHEMA.svec) ;
psql:gp_svec.sql.in:280: NOTICE:  cast from type int2 to type madlib_schema.svec does not exist, skipping
DROP CAST IF EXISTS (integer AS MADLIB_SCHEMA.svec) ;
psql:gp_svec.sql.in:281: NOTICE:  cast from type pg_catalog.int4 to type madlib_schema.svec does not exist, skipping
DROP CAST IF EXISTS (bigint AS MADLIB_SCHEMA.svec) ;
psql:gp_svec.sql.in:282: NOTICE:  cast from type pg_catalog.int8 to type madlib_schema.svec does not exist, skipping
DROP CAST IF EXISTS (float4 AS MADLIB_SCHEMA.svec) ;
psql:gp_svec.sql.in:283: NOTICE:  cast from type float4 to type madlib_schema.svec does not exist, skipping
DROP CAST IF EXISTS (float8 AS MADLIB_SCHEMA.svec) ;
psql:gp_svec.sql.in:284: NOTICE:  cast from type float8 to type madlib_schema.svec does not exist, skipping
DROP CAST IF EXISTS (numeric AS MADLIB_SCHEMA.svec) ;
psql:gp_svec.sql.in:285: NOTICE:  cast from type pg_catalog.numeric to type madlib_schema.svec does not exist, skipping
CREATE CAST (int2 AS MADLIB_SCHEMA.svec) WITH FUNCTION MADLIB_SCHEMA.svec_cast_int2(int2) AS IMPLICIT;
CREATE CAST (integer AS MADLIB_SCHEMA.svec) WITH FUNCTION MADLIB_SCHEMA.svec_cast_int4(integer) AS IMPLICIT;
CREATE CAST (bigint AS MADLIB_SCHEMA.svec) WITH FUNCTION MADLIB_SCHEMA.svec_cast_int8(bigint) AS IMPLICIT;
CREATE CAST (float4 AS MADLIB_SCHEMA.svec) WITH FUNCTION MADLIB_SCHEMA.svec_cast_float4(float4) AS IMPLICIT;
CREATE CAST (float8 AS MADLIB_SCHEMA.svec) WITH FUNCTION MADLIB_SCHEMA.svec_cast_float8(float8) AS IMPLICIT;
CREATE CAST (numeric AS MADLIB_SCHEMA.svec) WITH FUNCTION MADLIB_SCHEMA.svec_cast_numeric(numeric) AS IMPLICIT;
DROP CAST IF EXISTS (int2 AS float8[]) ;
psql:gp_svec.sql.in:294: NOTICE:  cast from type int2 to type float8[] does not exist, skipping
DROP CAST IF EXISTS (integer AS float8[]) ;
psql:gp_svec.sql.in:295: NOTICE:  cast from type pg_catalog.int4 to type float8[] does not exist, skipping
DROP CAST IF EXISTS (bigint AS float8[]) ;
psql:gp_svec.sql.in:296: NOTICE:  cast from type pg_catalog.int8 to type float8[] does not exist, skipping
DROP CAST IF EXISTS (float4 AS float8[]) ;
psql:gp_svec.sql.in:297: NOTICE:  cast from type float4 to type float8[] does not exist, skipping
DROP CAST IF EXISTS (float8 AS float8[]) ;
psql:gp_svec.sql.in:298: NOTICE:  cast from type float8 to type float8[] does not exist, skipping
DROP CAST IF EXISTS (numeric AS float8[]) ;
psql:gp_svec.sql.in:299: NOTICE:  cast from type pg_catalog.numeric to type float8[] does not exist, skipping
-- CREATE CAST (int2 AS float8[]) WITH FUNCTION MADLIB_SCHEMA.float8arr_cast_int2(int2) AS IMPLICIT;
-- CREATE CAST (integer AS float8[]) WITH FUNCTION MADLIB_SCHEMA.float8arr_cast_int4(integer) AS IMPLICIT;
-- CREATE CAST (bigint AS float8[]) WITH FUNCTION MADLIB_SCHEMA.float8arr_cast_int8(bigint) AS IMPLICIT;
-- CREATE CAST (float4 AS float8[]) WITH FUNCTION MADLIB_SCHEMA.float8arr_cast_float4(float4) AS IMPLICIT;
-- CREATE CAST (float8 AS float8[]) WITH FUNCTION MADLIB_SCHEMA.float8arr_cast_float8(float8) AS IMPLICIT;
-- CREATE CAST (numeric AS float8[]) WITH FUNCTION MADLIB_SCHEMA.float8arr_cast_numeric(numeric) AS IMPLICIT;
DROP CAST IF EXISTS (MADLIB_SCHEMA.svec AS float8[]) ;
psql:gp_svec.sql.in:308: NOTICE:  cast from type madlib_schema.svec to type float8[] does not exist, skipping
DROP CAST IF EXISTS (float8[] AS MADLIB_SCHEMA.svec) ;
psql:gp_svec.sql.in:309: NOTICE:  cast from type float8[] to type madlib_schema.svec does not exist, skipping
CREATE CAST (MADLIB_SCHEMA.svec AS float8[]) WITH FUNCTION MADLIB_SCHEMA.svec_return_array(MADLIB_SCHEMA.svec) AS IMPLICIT;
CREATE CAST (float8[] AS MADLIB_SCHEMA.svec) WITH FUNCTION MADLIB_SCHEMA.svec_cast_float8arr(float8[]) AS IMPLICIT;
DROP OPERATOR IF EXISTS = (MADLIB_SCHEMA.svec, MADLIB_SCHEMA.svec) ;
psql:gp_svec.sql.in:314: NOTICE:  operator = does not exist, skipping
CREATE OPERATOR = (
	leftarg = MADLIB_SCHEMA.svec, rightarg = MADLIB_SCHEMA.svec, procedure = MADLIB_SCHEMA.svec_eq,
	commutator = = ,
--	negator = <> ,
	restrict = eqsel, join = eqjoinsel
);
DROP AGGREGATE IF EXISTS MADLIB_SCHEMA.sum(MADLIB_SCHEMA.svec);
psql:gp_svec.sql.in:324: NOTICE:  aggregate madlib_schema.sum(madlib_schema.svec) does not exist, skipping
CREATE AGGREGATE MADLIB_SCHEMA.sum (MADLIB_SCHEMA.svec) (
	SFUNC = MADLIB_SCHEMA.svec_plus,
	PREFUNC = MADLIB_SCHEMA.svec_plus,
	INITCOND = '{1}:{0.}', -- Zero
	STYPE = MADLIB_SCHEMA.svec
);
-- Aggregate that provides a tally of nonzero entries in a list of vectors
DROP AGGREGATE IF EXISTS MADLIB_SCHEMA.vec_count_nonzero(MADLIB_SCHEMA.svec);
psql:gp_svec.sql.in:333: NOTICE:  aggregate madlib_schema.vec_count_nonzero(madlib_schema.svec) does not exist, skipping
CREATE AGGREGATE MADLIB_SCHEMA.vec_count_nonzero (MADLIB_SCHEMA.svec) (
	SFUNC = MADLIB_SCHEMA.svec_count,
	PREFUNC = MADLIB_SCHEMA.svec_plus,
 	INITCOND = '{1}:{0.}', -- Zero
	STYPE = MADLIB_SCHEMA.svec
);
DROP AGGREGATE IF EXISTS MADLIB_SCHEMA.array_agg(float8);
psql:gp_svec.sql.in:341: NOTICE:  aggregate madlib_schema.array_agg(float8) does not exist, skipping
CREATE AGGREGATE MADLIB_SCHEMA.array_agg (float8) (
	SFUNC = MADLIB_SCHEMA.vec_pivot,
	PREFUNC = MADLIB_SCHEMA.svec_concat,
	STYPE = MADLIB_SCHEMA.svec
);
DROP AGGREGATE IF EXISTS MADLIB_SCHEMA.median_inmemory(float8);
psql:gp_svec.sql.in:348: NOTICE:  aggregate madlib_schema.median_inmemory(float8) does not exist, skipping
CREATE AGGREGATE MADLIB_SCHEMA.median_inmemory (float8) (
	SFUNC = MADLIB_SCHEMA.vec_pivot,
	PREFUNC = MADLIB_SCHEMA.svec_concat,
	FINALFUNC = MADLIB_SCHEMA.vec_median,
	STYPE = MADLIB_SCHEMA.svec
);
-- Comparisons based on L2 Norm
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_l2_lt(MADLIB_SCHEMA.svec,MADLIB_SCHEMA.svec) RETURNS bool AS 'gp_svec.so', 'svec_l2_lt' LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_l2_le(MADLIB_SCHEMA.svec,MADLIB_SCHEMA.svec) RETURNS bool AS 'gp_svec.so', 'svec_l2_le' LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_l2_eq(MADLIB_SCHEMA.svec,MADLIB_SCHEMA.svec) RETURNS bool AS 'gp_svec.so', 'svec_l2_eq' LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_l2_ne(MADLIB_SCHEMA.svec,MADLIB_SCHEMA.svec) RETURNS bool AS 'gp_svec.so', 'svec_l2_ne' LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_l2_gt(MADLIB_SCHEMA.svec,MADLIB_SCHEMA.svec) RETURNS bool AS 'gp_svec.so', 'svec_l2_gt' LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_l2_ge(MADLIB_SCHEMA.svec,MADLIB_SCHEMA.svec) RETURNS bool AS 'gp_svec.so', 'svec_l2_ge' LANGUAGE C IMMUTABLE;
CREATE OR REPLACE FUNCTION MADLIB_SCHEMA.svec_l2_cmp(MADLIB_SCHEMA.svec,MADLIB_SCHEMA.svec) RETURNS integer AS 'gp_svec.so', 'svec_l2_cmp' LANGUAGE C IMMUTABLE;
DROP OPERATOR IF EXISTS < (MADLIB_SCHEMA.svec, MADLIB_SCHEMA.svec) CASCADE ;
psql:gp_svec.sql.in:365: NOTICE:  operator < does not exist, skipping
DROP OPERATOR IF EXISTS <= (MADLIB_SCHEMA.svec, MADLIB_SCHEMA.svec) CASCADE ;
psql:gp_svec.sql.in:366: NOTICE:  operator <= does not exist, skipping
DROP OPERATOR IF EXISTS <> (MADLIB_SCHEMA.svec, MADLIB_SCHEMA.svec) ;
psql:gp_svec.sql.in:367: NOTICE:  operator <> does not exist, skipping
DROP OPERATOR IF EXISTS == (MADLIB_SCHEMA.svec, MADLIB_SCHEMA.svec) CASCADE ;
psql:gp_svec.sql.in:368: NOTICE:  operator == does not exist, skipping
DROP OPERATOR IF EXISTS > (MADLIB_SCHEMA.svec, MADLIB_SCHEMA.svec) CASCADE ;
psql:gp_svec.sql.in:369: NOTICE:  operator > does not exist, skipping
DROP OPERATOR IF EXISTS >= (MADLIB_SCHEMA.svec, MADLIB_SCHEMA.svec) CASCADE ;
psql:gp_svec.sql.in:370: NOTICE:  operator >= does not exist, skipping
DROP OPERATOR IF EXISTS *|| (int4, MADLIB_SCHEMA.svec) ;
psql:gp_svec.sql.in:371: NOTICE:  operator *|| does not exist, skipping
CREATE OPERATOR < (
	leftarg = MADLIB_SCHEMA.svec, rightarg = MADLIB_SCHEMA.svec, procedure = MADLIB_SCHEMA.svec_l2_lt,
	commutator = > , negator = >= ,
	restrict = scalarltsel, join = scalarltjoinsel
);
CREATE OPERATOR <= (
	leftarg = MADLIB_SCHEMA.svec, rightarg = MADLIB_SCHEMA.svec, procedure = MADLIB_SCHEMA.svec_l2_le,
	commutator = >= , negator = > ,
	restrict = scalarltsel, join = scalarltjoinsel
);
CREATE OPERATOR <> (
	leftarg = MADLIB_SCHEMA.svec, rightarg = MADLIB_SCHEMA.svec, procedure = MADLIB_SCHEMA.svec_l2_eq,
	commutator = <> ,
	negator = =,
	restrict = eqsel, join = eqjoinsel
);
CREATE OPERATOR == (
	leftarg = MADLIB_SCHEMA.svec, rightarg = MADLIB_SCHEMA.svec, procedure = MADLIB_SCHEMA.svec_l2_eq,
	commutator = = ,
	negator = <> ,
	restrict = eqsel, join = eqjoinsel
);
CREATE OPERATOR >= (
	leftarg = MADLIB_SCHEMA.svec, rightarg = MADLIB_SCHEMA.svec, procedure = MADLIB_SCHEMA.svec_l2_ge,
	commutator = <= , negator = < ,
	restrict = scalargtsel, join = scalargtjoinsel
);
CREATE OPERATOR > (
	leftarg = MADLIB_SCHEMA.svec, rightarg = MADLIB_SCHEMA.svec, procedure = MADLIB_SCHEMA.svec_l2_gt,
	commutator = < , negator = <= ,
	restrict = scalargtsel, join = scalargtjoinsel
);
CREATE OPERATOR *|| (
	leftarg = int4, rightarg = MADLIB_SCHEMA.svec, procedure = MADLIB_SCHEMA.svec_concat_replicate
);
CREATE OPERATOR CLASS MADLIB_SCHEMA.svec_l2_ops
DEFAULT FOR TYPE MADLIB_SCHEMA.svec USING btree AS
OPERATOR        1       < ,
OPERATOR        2       <= ,
OPERATOR        3       == ,
OPERATOR        4       >= ,
OPERATOR        5       > ,
FUNCTION        1       MADLIB_SCHEMA.svec_l2_cmp(MADLIB_SCHEMA.svec, MADLIB_SCHEMA.svec);
select MADLIB_SCHEMA.dmin(1000,1000.1);
 dmin 
------
 1000
(1 row)

select MADLIB_SCHEMA.dmin(1000,NULL);
 dmin 
------
 1000
(1 row)

select MADLIB_SCHEMA.dmin(NULL,1000);
 dmin 
------
 1000
(1 row)

select MADLIB_SCHEMA.dmin(NULL,NULL);
 dmin 
------
     
(1 row)

select MADLIB_SCHEMA.dmax(1000,1000.1);
  dmax  
--------
 1000.1
(1 row)

select MADLIB_SCHEMA.dmax(1000,NULL);
 dmax 
------
 1000
(1 row)

select MADLIB_SCHEMA.dmax(NULL,1000);
 dmax 
------
 1000
(1 row)

select MADLIB_SCHEMA.dmax(NULL,NULL);
 dmax 
------
     
(1 row)

drop table if exists MADLIB_SCHEMA.test_pairs;
psql:sql/gp_svec_test.sql:22: NOTICE:  table "test_pairs" does not exist, skipping
create table MADLIB_SCHEMA.test_pairs( id int, a MADLIB_SCHEMA.svec, b MADLIB_SCHEMA.svec ) distributed by (id);
insert into MADLIB_SCHEMA.test_pairs values 
       (0, '{1,100,1}:{5,0,5}', '{50,50,2}:{1,2,10}'),
       (1, '{1,100,1}:{-5,0,-5}', '{50,50,2}:{-1,-2,-10}');
insert into MADLIB_SCHEMA.test_pairs values 
--       (10, null, null),
       (11, '{1}:{0}', '{1}:{1}'),
       (12, '{1}:{5}', '{3}:{-8}'),
       (13, '{1}:{0}', '{1}:{NULL}'),
       (14, '{1,2,1}:{2,4,2}', '{2,1,1}:{0,3,5}'),
       (15, '{1,2,1}:{2,4,2}', '{2,1,1}:{NULL,3,5}');
select id, MADLIB_SCHEMA.svec_count(a,b) from MADLIB_SCHEMA.test_pairs where MADLIB_SCHEMA.dimension(a) = MADLIB_SCHEMA.dimension(b) order by id;
 id |     svec_count      
----+---------------------
  0 | {1,100,1}:{6,1,6}
  1 | {1,100,1}:{-4,1,-4}
 11 | {1}:{1}
 13 | {1}:{0}
 14 | {1,1,1,1}:{2,4,5,3}
 15 | {1,1,1,1}:{2,4,5,3}
(6 rows)

select id, MADLIB_SCHEMA.svec_plus(a,b) from MADLIB_SCHEMA.test_pairs order by id;
 id |            svec_plus             
----+----------------------------------
  0 | {1,49,50,1,1}:{6,1,2,10,15}
  1 | {1,49,50,1,1}:{-6,-1,-2,-10,-15}
 11 | {1}:{1}
 12 | {3}:{-3}
 13 | {1}:{NVP}
 14 | {1,1,2}:{2,4,7}
 15 | {2,2}:{NVP,7}
(7 rows)

select id, MADLIB_SCHEMA.svec_plus(a,b) = MADLIB_SCHEMA.svec_plus(b,a) from MADLIB_SCHEMA.test_pairs order by id;
 id | ?column? 
----+----------
  0 | t
  1 | t
 11 | t
 12 | t
 13 | t
 14 | t
 15 | t
(7 rows)

select id, MADLIB_SCHEMA.svec_mult(a,b) from MADLIB_SCHEMA.test_pairs order by id;
 id |      svec_mult      
----+---------------------
  0 | {1,100,1}:{5,0,50}
  1 | {1,100,1}:{5,-0,50}
 11 | {1}:{0}
 12 | {3}:{-40}
 13 | {1}:{NVP}
 14 | {2,1,1}:{0,12,10}
 15 | {2,1,1}:{NVP,12,10}
(7 rows)

select id, MADLIB_SCHEMA.svec_mult(a,b) = MADLIB_SCHEMA.svec_mult(b,a) from MADLIB_SCHEMA.test_pairs order by id;
 id | ?column? 
----+----------
  0 | t
  1 | t
 11 | t
 12 | t
 13 | t
 14 | t
 15 | t
(7 rows)

select id, MADLIB_SCHEMA.svec_div(a,b) = MADLIB_SCHEMA.svec_mult(a, MADLIB_SCHEMA.svec_pow(b,-1)) from MADLIB_SCHEMA.test_pairs order by id;
 id | ?column? 
----+----------
  0 | t
  1 | t
 11 | t
 12 | t
 13 | t
 14 | t
 15 | t
(7 rows)

select id, MADLIB_SCHEMA.svec_minus(a, b) = MADLIB_SCHEMA.svec_plus(MADLIB_SCHEMA.svec_mult(-1,b), a) from MADLIB_SCHEMA.test_pairs order by id;
 id | ?column? 
----+----------
  0 | t
  1 | t
 11 | t
 12 | t
 13 | t
 14 | t
 15 | t
(7 rows)

select id, MADLIB_SCHEMA.svec_pow(a,2) = MADLIB_SCHEMA.svec_mult(a,a) from MADLIB_SCHEMA.test_pairs order by id;
 id | ?column? 
----+----------
  0 | t
  1 | t
 11 | t
 12 | t
 13 | t
 14 | t
 15 | t
(7 rows)

select id, MADLIB_SCHEMA.svec_count(a,b::float8[]) from MADLIB_SCHEMA.test_pairs where MADLIB_SCHEMA.dimension(a) = MADLIB_SCHEMA.dimension(b) order by id;
 id |     svec_count      
----+---------------------
  0 | {1,100,1}:{6,1,6}
  1 | {1,100,1}:{-4,1,-4}
 11 | {1}:{1}
 13 | {1}:{0}
 14 | {1,1,1,1}:{2,4,5,3}
 15 | {1,1,1,1}:{2,4,5,3}
(6 rows)

select id, MADLIB_SCHEMA.svec_plus(a,b::float8[]) from MADLIB_SCHEMA.test_pairs order by id;
 id |            svec_plus             
----+----------------------------------
  0 | {1,49,50,1,1}:{6,1,2,10,15}
  1 | {1,49,50,1,1}:{-6,-1,-2,-10,-15}
 11 | {1}:{1}
 12 | {3}:{-3}
 13 | {1}:{NVP}
 14 | {1,1,2}:{2,4,7}
 15 | {2,2}:{NVP,7}
(7 rows)

select id, MADLIB_SCHEMA.svec_plus(a,b::float8[]) = MADLIB_SCHEMA.svec_plus(b,a::float8[]) from MADLIB_SCHEMA.test_pairs order by id;
 id | ?column? 
----+----------
  0 | t
  1 | t
 11 | t
 12 | t
 13 | t
 14 | t
 15 | t
(7 rows)

select id, MADLIB_SCHEMA.svec_mult(a,b::float8[]) from MADLIB_SCHEMA.test_pairs order by id;
 id |      svec_mult      
----+---------------------
  0 | {1,100,1}:{5,0,50}
  1 | {1,100,1}:{5,-0,50}
 11 | {1}:{0}
 12 | {3}:{-40}
 13 | {1}:{NVP}
 14 | {2,1,1}:{0,12,10}
 15 | {2,1,1}:{NVP,12,10}
(7 rows)

select id, MADLIB_SCHEMA.svec_mult(a,b::float8[]) = MADLIB_SCHEMA.svec_mult(b,a::float8[]) from MADLIB_SCHEMA.test_pairs order by id;
 id | ?column? 
----+----------
  0 | t
  1 | t
 11 | t
 12 | t
 13 | t
 14 | t
 15 | t
(7 rows)

select id, MADLIB_SCHEMA.svec_div(a,b::float8[]) = MADLIB_SCHEMA.svec_mult(a, MADLIB_SCHEMA.svec_pow(b,-1)::float8[]) from MADLIB_SCHEMA.test_pairs order by id;
 id | ?column? 
----+----------
  0 | t
  1 | t
 11 | t
 12 | t
 13 | t
 14 | t
 15 | t
(7 rows)

select id, MADLIB_SCHEMA.svec_minus(a, b::float8[]) = MADLIB_SCHEMA.svec_plus(MADLIB_SCHEMA.svec_mult(-1,b), a::float8[]) from MADLIB_SCHEMA.test_pairs order by id;
 id | ?column? 
----+----------
  0 | t
  1 | t
 11 | t
 12 | t
 13 | t
 14 | t
 15 | t
(7 rows)

select id, MADLIB_SCHEMA.svec_pow(a,2) = MADLIB_SCHEMA.svec_mult(a,a::float8[]) from MADLIB_SCHEMA.test_pairs order by id;
 id | ?column? 
----+----------
  0 | t
  1 | t
 11 | t
 12 | t
 13 | t
 14 | t
 15 | t
(7 rows)

select id, MADLIB_SCHEMA.svec_count(a::float8[],b) from MADLIB_SCHEMA.test_pairs where MADLIB_SCHEMA.dimension(a) = MADLIB_SCHEMA.dimension(b) order by id;
 id |     svec_count      
----+---------------------
  0 | {1,100,1}:{6,1,6}
  1 | {1,100,1}:{-4,1,-4}
 11 | {1}:{1}
 13 | {1}:{0}
 14 | {1,1,1,1}:{2,4,5,3}
 15 | {1,1,1,1}:{2,4,5,3}
(6 rows)

select id, MADLIB_SCHEMA.svec_plus(a::float8[],b) from MADLIB_SCHEMA.test_pairs order by id;
 id |            svec_plus             
----+----------------------------------
  0 | {1,49,50,1,1}:{6,1,2,10,15}
  1 | {1,49,50,1,1}:{-6,-1,-2,-10,-15}
 11 | {1}:{1}
 12 | {3}:{-3}
 13 | {1}:{NVP}
 14 | {1,1,2}:{2,4,7}
 15 | {2,2}:{NVP,7}
(7 rows)

select id, MADLIB_SCHEMA.svec_plus(a::float8[],b) = MADLIB_SCHEMA.svec_plus(b::float8[],a) from MADLIB_SCHEMA.test_pairs order by id;
 id | ?column? 
----+----------
  0 | t
  1 | t
 11 | t
 12 | t
 13 | t
 14 | t
 15 | t
(7 rows)

select id, MADLIB_SCHEMA.svec_mult(a::float8[],b) from MADLIB_SCHEMA.test_pairs order by id;
 id |      svec_mult      
----+---------------------
  0 | {1,100,1}:{5,0,50}
  1 | {1,100,1}:{5,-0,50}
 11 | {1}:{0}
 12 | {3}:{-40}
 13 | {1}:{NVP}
 14 | {2,1,1}:{0,12,10}
 15 | {2,1,1}:{NVP,12,10}
(7 rows)

select id, MADLIB_SCHEMA.svec_mult(a::float8[],b) = MADLIB_SCHEMA.svec_mult(b::float8[],a) from MADLIB_SCHEMA.test_pairs order by id;
 id | ?column? 
----+----------
  0 | t
  1 | t
 11 | t
 12 | t
 13 | t
 14 | t
 15 | t
(7 rows)

select id, MADLIB_SCHEMA.svec_div(a::float8[],b) = MADLIB_SCHEMA.svec_mult(a::float8[], MADLIB_SCHEMA.svec_pow(b,-1)) from MADLIB_SCHEMA.test_pairs order by id;
 id | ?column? 
----+----------
  0 | t
  1 | t
 11 | t
 12 | t
 13 | t
 14 | t
 15 | t
(7 rows)

select id, MADLIB_SCHEMA.svec_minus(a::float8[], b) = MADLIB_SCHEMA.svec_plus(MADLIB_SCHEMA.svec_mult(-1,b)::float8[], a) from MADLIB_SCHEMA.test_pairs order by id;
 id | ?column? 
----+----------
  0 | t
  1 | t
 11 | t
 12 | t
 13 | t
 14 | t
 15 | t
(7 rows)

select id, MADLIB_SCHEMA.svec_pow(a::float8[],2) = MADLIB_SCHEMA.svec_mult(a::float8[],a) from MADLIB_SCHEMA.test_pairs order by id;
 id | ?column? 
----+----------
  0 | t
  1 | t
 11 | t
 12 | t
 13 | t
 14 | t
 15 | t
(7 rows)

select id, MADLIB_SCHEMA.dot(a,b) from MADLIB_SCHEMA.test_pairs where MADLIB_SCHEMA.dimension(a) = MADLIB_SCHEMA.dimension(b) order by id;
 id | dot 
----+-----
  0 |  55
  1 |  55
 11 |   0
 13 |    
 14 |  22
 15 |    
(6 rows)

select id, MADLIB_SCHEMA.dot(a,b) = MADLIB_SCHEMA.dot(b,a) from MADLIB_SCHEMA.test_pairs where MADLIB_SCHEMA.dimension(a) = MADLIB_SCHEMA.dimension(b) order by id;
 id | ?column? 
----+----------
  0 | t
  1 | t
 11 | t
 13 | 
 14 | t
 15 | 
(6 rows)

select id, MADLIB_SCHEMA.dot(a,b::float8[]) = MADLIB_SCHEMA.dot(b,a::float8[]) from MADLIB_SCHEMA.test_pairs where MADLIB_SCHEMA.dimension(a) = MADLIB_SCHEMA.dimension(b) order by id;
 id | ?column? 
----+----------
  0 | t
  1 | t
 11 | t
 13 | 
 14 | t
 15 | 
(6 rows)

select id, MADLIB_SCHEMA.dot(a::float8[],b) = MADLIB_SCHEMA.dot(b::float8[],a) from MADLIB_SCHEMA.test_pairs where MADLIB_SCHEMA.dimension(a) = MADLIB_SCHEMA.dimension(b) order by id;
 id | ?column? 
----+----------
  0 | t
  1 | t
 11 | t
 13 | 
 14 | t
 15 | 
(6 rows)

select id, MADLIB_SCHEMA.dot(a::float8[],b::float8[]) = MADLIB_SCHEMA.dot(b::float8[],a::float8[]) from MADLIB_SCHEMA.test_pairs where MADLIB_SCHEMA.dimension(a) = MADLIB_SCHEMA.dimension(b) order by id;
 id | ?column? 
----+----------
  0 | t
  1 | t
 11 | t
 13 | 
 14 | t
 15 | 
(6 rows)

select id, MADLIB_SCHEMA.l2norm(a), MADLIB_SCHEMA.l2norm(a::float[]), MADLIB_SCHEMA.l2norm(b), MADLIB_SCHEMA.l2norm(b::float8[]) from MADLIB_SCHEMA.test_pairs order by id;
 id |      l2norm      |      l2norm      |      l2norm      |      l2norm      
----+------------------+------------------+------------------+------------------
  0 | 7.07106781186548 | 7.07106781186548 | 21.2132034355964 | 21.2132034355964
  1 | 7.07106781186548 | 7.07106781186548 | 21.2132034355964 | 21.2132034355964
 11 |                0 |                0 |                1 |                1
 12 |                5 |                5 |  13.856406460551 |  13.856406460551
 13 |                0 |                0 |                  |                 
 14 | 6.32455532033676 | 6.32455532033676 |  5.8309518948453 |  5.8309518948453
 15 | 6.32455532033676 | 6.32455532033676 |                  |                 
(7 rows)

select id, MADLIB_SCHEMA.l1norm(a), MADLIB_SCHEMA.l1norm(a::float[]), MADLIB_SCHEMA.l1norm(b), MADLIB_SCHEMA.l1norm(b::float8[]) from MADLIB_SCHEMA.test_pairs order by id;
 id | l1norm | l1norm | l1norm | l1norm 
----+--------+--------+--------+--------
  0 |     10 |     10 |    170 |    170
  1 |     10 |     10 |    170 |    170
 11 |      0 |      0 |      1 |      1
 12 |      5 |      5 |     24 |     24
 13 |      0 |      0 |        |       
 14 |     12 |     12 |      8 |      8
 15 |     12 |     12 |        |       
(7 rows)

select MADLIB_SCHEMA.svec_plus('{1,2,3}:{4,5,6}', 5);
     svec_plus     
-------------------
 {1,2,3}:{9,10,11}
(1 row)

select MADLIB_SCHEMA.svec_plus(5, '{1,2,3}:{4,5,6}');
     svec_plus     
-------------------
 {1,2,3}:{9,10,11}
(1 row)

select MADLIB_SCHEMA.svec_plus(500, '{1,2,3}:{4,null,6}');
       svec_plus       
-----------------------
 {1,2,3}:{504,NVP,506}
(1 row)

select MADLIB_SCHEMA.svec_div(500, '{1,2,3}:{4,null,6}');
              svec_div              
------------------------------------
 {1,2,3}:{125,NVP,83.3333333333333}
(1 row)

select MADLIB_SCHEMA.svec_div('{1,2,3}:{4,null,6}', 500);
         svec_div          
---------------------------
 {1,2,3}:{0.008,NVP,0.012}
(1 row)

-- Test operators between svec and float8[]
select ('{1,2,3,4}:{3,4,5,6}'::MADLIB_SCHEMA.svec)           %*% ('{1,2,3,4}:{3,4,5,6}'::MADLIB_SCHEMA.svec)::float8[];
 ?column? 
----------
      260
(1 row)

select ('{1,2,3,4}:{3,4,5,6}'::MADLIB_SCHEMA.svec)::float8[] %*% ('{1,2,3,4}:{3,4,5,6}'::MADLIB_SCHEMA.svec);
 ?column? 
----------
      260
(1 row)

select ('{1,2,3,4}:{3,4,5,6}'::MADLIB_SCHEMA.svec)            /  ('{1,2,3,4}:{3,4,5,6}'::MADLIB_SCHEMA.svec)::float8[];
 ?column? 
----------
 {10}:{1}
(1 row)

select ('{1,2,3,4}:{3,4,5,6}'::MADLIB_SCHEMA.svec)::float8[]  /  ('{1,2,3,4}:{3,4,5,6}'::MADLIB_SCHEMA.svec);
 ?column? 
----------
 {10}:{1}
(1 row)

select ('{1,2,3,4}:{3,4,5,6}'::MADLIB_SCHEMA.svec)            *  ('{1,2,3,4}:{3,4,5,6}'::MADLIB_SCHEMA.svec)::float8[];
        ?column?        
------------------------
 {1,2,3,4}:{9,16,25,36}
(1 row)

select ('{1,2,3,4}:{3,4,5,6}'::MADLIB_SCHEMA.svec)::float8[]  *  ('{1,2,3,4}:{3,4,5,6}'::MADLIB_SCHEMA.svec);
        ?column?        
------------------------
 {1,2,3,4}:{9,16,25,36}
(1 row)

select ('{1,2,3,4}:{3,4,5,6}'::MADLIB_SCHEMA.svec)            +  ('{1,2,3,4}:{3,4,5,6}'::MADLIB_SCHEMA.svec)::float8[];
       ?column?        
-----------------------
 {1,2,3,4}:{6,8,10,12}
(1 row)

select ('{1,2,3,4}:{3,4,5,6}'::MADLIB_SCHEMA.svec)::float8[]  +  ('{1,2,3,4}:{3,4,5,6}'::MADLIB_SCHEMA.svec);
       ?column?        
-----------------------
 {1,2,3,4}:{6,8,10,12}
(1 row)

select ('{1,2,3,4}:{3,4,5,6}'::MADLIB_SCHEMA.svec)            -  ('{1,2,3,4}:{3,4,5,6}'::MADLIB_SCHEMA.svec)::float8[];
 ?column? 
----------
 {10}:{0}
(1 row)

select ('{1,2,3,4}:{3,4,5,6}'::MADLIB_SCHEMA.svec)::float8[]  -  ('{1,2,3,4}:{3,4,5,6}'::MADLIB_SCHEMA.svec);
 ?column? 
----------
 {10}:{0}
(1 row)

-- these should produce error messages 
/*
select '{10000000000000000000}:{1}'::MADLIB_SCHEMA.svec ;
select '{1,null,2}:{2,3,4}'::MADLIB_SCHEMA.svec;
select MADLIB_SCHEMA.svec_count('{1,1,1}:{3,4,5}', '{2,2}:{1,3}');
select MADLIB_SCHEMA.svec_plus('{1,1,1}:{3,4,5}', '{2,2}:{1,3}');
select MADLIB_SCHEMA.svec_minus('{1,1,1}:{3,4,5}', '{2,2}:{1,3}');
select MADLIB_SCHEMA.svec_mult('{1,1,1}:{3,4,5}', '{2,2}:{1,3}');
select MADLIB_SCHEMA.svec_div('{1,1,1}:{3,4,5}', '{2,2}:{1,3}');
*/
select MADLIB_SCHEMA.unnest('{1}:{5}'::MADLIB_SCHEMA.svec);
 unnest 
--------
      5
(1 row)

select MADLIB_SCHEMA.unnest('{1,2,3,4}:{5,6,7,8}'::MADLIB_SCHEMA.svec);
 unnest 
--------
      5
      6
      6
      7
      7
      7
      8
      8
      8
      8
(10 rows)

select MADLIB_SCHEMA.unnest('{1,2,3,4}:{5,6,null,8}'::MADLIB_SCHEMA.svec);
 unnest 
--------
      5
      6
      6
       
       
       
      8
      8
      8
      8
(10 rows)

select id, MADLIB_SCHEMA.unnest(a),a from MADLIB_SCHEMA.test_pairs where id >= 10 order by id;
 id | unnest |        a        
----+--------+-----------------
 11 |      0 | {1}:{0}
 12 |      5 | {1}:{5}
 13 |      0 | {1}:{0}
 14 |      4 | {1,2,1}:{2,4,2}
 14 |      2 | {1,2,1}:{2,4,2}
 14 |      2 | {1,2,1}:{2,4,2}
 14 |      4 | {1,2,1}:{2,4,2}
 15 |      2 | {1,2,1}:{2,4,2}
 15 |      4 | {1,2,1}:{2,4,2}
 15 |      2 | {1,2,1}:{2,4,2}
 15 |      4 | {1,2,1}:{2,4,2}
(11 rows)

select MADLIB_SCHEMA.vec_pivot('{1}:{5}', 2);
  vec_pivot  
-------------
 {1,1}:{5,2}
(1 row)

select MADLIB_SCHEMA.vec_pivot('{1}:{5}', 5);
 vec_pivot 
-----------
 {2}:{5}
(1 row)

select MADLIB_SCHEMA.vec_pivot('{1}:{5}', null);
   vec_pivot   
---------------
 {1,1}:{5,NVP}
(1 row)

select MADLIB_SCHEMA.vec_pivot('{1}:{null}', 5);
   vec_pivot   
---------------
 {1,1}:{NVP,5}
(1 row)

select MADLIB_SCHEMA.vec_pivot('{1}:{null}', null);
 vec_pivot 
-----------
 {2}:{NVP}
(1 row)

select MADLIB_SCHEMA.vec_pivot('{1,2,3,4}:{5,6,7,8}'::MADLIB_SCHEMA.svec, 2);
        vec_pivot        
-------------------------
 {1,2,3,4,1}:{5,6,7,8,2}
(1 row)

select id, MADLIB_SCHEMA.vec_pivot(a, 5), a, MADLIB_SCHEMA.vec_pivot(a,6), a, MADLIB_SCHEMA.vec_pivot(a,2) from MADLIB_SCHEMA.test_pairs order by id;
 id |        vec_pivot        |          a          |        vec_pivot        |          a          |        vec_pivot        
----+-------------------------+---------------------+-------------------------+---------------------+-------------------------
  0 | {1,100,2}:{5,0,5}       | {1,100,1}:{5,0,5}   | {1,100,1,1}:{5,0,5,6}   | {1,100,1}:{5,0,5}   | {1,100,1,1}:{5,0,5,2}
  1 | {1,100,1,1}:{-5,0,-5,5} | {1,100,1}:{-5,0,-5} | {1,100,1,1}:{-5,0,-5,6} | {1,100,1}:{-5,0,-5} | {1,100,1,1}:{-5,0,-5,2}
 11 | {1,1}:{0,5}             | {1}:{0}             | {1,1}:{0,6}             | {1}:{0}             | {1,1}:{0,2}
 12 | {2}:{5}                 | {1}:{5}             | {1,1}:{5,6}             | {1}:{5}             | {1,1}:{5,2}
 13 | {1,1}:{0,5}             | {1}:{0}             | {1,1}:{0,6}             | {1}:{0}             | {1,1}:{0,2}
 14 | {1,2,1,1}:{2,4,2,5}     | {1,2,1}:{2,4,2}     | {1,2,1,1}:{2,4,2,6}     | {1,2,1}:{2,4,2}     | {1,2,2}:{2,4,2}
 15 | {1,2,1,1}:{2,4,2,5}     | {1,2,1}:{2,4,2}     | {1,2,1,1}:{2,4,2,6}     | {1,2,1}:{2,4,2}     | {1,2,2}:{2,4,2}
(7 rows)

select id, MADLIB_SCHEMA.vec_pivot(b, 5), b, MADLIB_SCHEMA.vec_pivot(b,6), b, MADLIB_SCHEMA.vec_pivot(b,null) from MADLIB_SCHEMA.test_pairs order by id;
 id |         vec_pivot         |           b           |         vec_pivot         |           b           |          vec_pivot          
----+---------------------------+-----------------------+---------------------------+-----------------------+-----------------------------
  0 | {50,50,2,1}:{1,2,10,5}    | {50,50,2}:{1,2,10}    | {50,50,2,1}:{1,2,10,6}    | {50,50,2}:{1,2,10}    | {50,50,2,1}:{1,2,10,NVP}
  1 | {50,50,2,1}:{-1,-2,-10,5} | {50,50,2}:{-1,-2,-10} | {50,50,2,1}:{-1,-2,-10,6} | {50,50,2}:{-1,-2,-10} | {50,50,2,1}:{-1,-2,-10,NVP}
 11 | {1,1}:{1,5}               | {1}:{1}               | {1,1}:{1,6}               | {1}:{1}               | {1,1}:{1,NVP}
 12 | {3,1}:{-8,5}              | {3}:{-8}              | {3,1}:{-8,6}              | {3}:{-8}              | {3,1}:{-8,NVP}
 13 | {1,1}:{NVP,5}             | {1}:{NVP}             | {1,1}:{NVP,6}             | {1}:{NVP}             | {2}:{NVP}
 14 | {2,1,2}:{0,3,5}           | {2,1,1}:{0,3,5}       | {2,1,1,1}:{0,3,5,6}       | {2,1,1}:{0,3,5}       | {2,1,1,1}:{0,3,5,NVP}
 15 | {2,1,2}:{NVP,3,5}         | {2,1,1}:{NVP,3,5}     | {2,1,1,1}:{NVP,3,5,6}     | {2,1,1}:{NVP,3,5}     | {2,1,1,1}:{NVP,3,5,NVP}
(7 rows)

select MADLIB_SCHEMA.vec_sum('{1}:{-5}'::MADLIB_SCHEMA.svec);
 vec_sum 
---------
      -5
(1 row)

select id, a, MADLIB_SCHEMA.vec_sum(a), a, b, MADLIB_SCHEMA.vec_sum(b), b from MADLIB_SCHEMA.test_pairs order by id;
 id |          a          | vec_sum |          a          |           b           | vec_sum |           b           
----+---------------------+---------+---------------------+-----------------------+---------+-----------------------
  0 | {1,100,1}:{5,0,5}   |      10 | {1,100,1}:{5,0,5}   | {50,50,2}:{1,2,10}    |     170 | {50,50,2}:{1,2,10}
  1 | {1,100,1}:{-5,0,-5} |     -10 | {1,100,1}:{-5,0,-5} | {50,50,2}:{-1,-2,-10} |    -170 | {50,50,2}:{-1,-2,-10}
 11 | {1}:{0}             |       0 | {1}:{0}             | {1}:{1}               |       1 | {1}:{1}
 12 | {1}:{5}             |       5 | {1}:{5}             | {3}:{-8}              |     -24 | {3}:{-8}
 13 | {1}:{0}             |       0 | {1}:{0}             | {1}:{NVP}             |         | {1}:{NVP}
 14 | {1,2,1}:{2,4,2}     |      12 | {1,2,1}:{2,4,2}     | {2,1,1}:{0,3,5}       |       8 | {2,1,1}:{0,3,5}
 15 | {1,2,1}:{2,4,2}     |      12 | {1,2,1}:{2,4,2}     | {2,1,1}:{NVP,3,5}     |         | {2,1,1}:{NVP,3,5}
(7 rows)

select id, MADLIB_SCHEMA.vec_sum(a) = MADLIB_SCHEMA.vec_sum(a::float8[]) from MADLIB_SCHEMA.test_pairs order by id;
 id | ?column? 
----+----------
  0 | t
  1 | t
 11 | t
 12 | t
 13 | t
 14 | t
 15 | t
(7 rows)

select id, MADLIB_SCHEMA.vec_sum(b) = MADLIB_SCHEMA.vec_sum(b::float8[]) from MADLIB_SCHEMA.test_pairs order by id;
 id | ?column? 
----+----------
  0 | t
  1 | t
 11 | t
 12 | t
 13 | 
 14 | t
 15 | 
(7 rows)

select id, a, MADLIB_SCHEMA.vec_median(a), a from MADLIB_SCHEMA.test_pairs order by id;
 id |          a          | vec_median |          a          
----+---------------------+------------+---------------------
  0 | {1,100,1}:{5,0,5}   |          0 | {1,100,1}:{5,0,5}
  1 | {1,100,1}:{-5,0,-5} |          0 | {1,100,1}:{-5,0,-5}
 11 | {1}:{0}             |          0 | {1}:{0}
 12 | {1}:{5}             |          5 | {1}:{5}
 13 | {1}:{0}             |          0 | {1}:{0}
 14 | {1,2,1}:{2,4,2}     |          2 | {1,2,1}:{2,4,2}
 15 | {1,2,1}:{2,4,2}     |          2 | {1,2,1}:{2,4,2}
(7 rows)

select id, b, MADLIB_SCHEMA.vec_median(b), b from MADLIB_SCHEMA.test_pairs order by id;
 id |           b           | vec_median |           b           
----+-----------------------+------------+-----------------------
  0 | {50,50,2}:{1,2,10}    |          2 | {50,50,2}:{1,2,10}
  1 | {50,50,2}:{-1,-2,-10} |         -2 | {50,50,2}:{-1,-2,-10}
 11 | {1}:{1}               |          1 | {1}:{1}
 12 | {3}:{-8}              |         -8 | {3}:{-8}
 13 | {1}:{NVP}             |            | {1}:{NVP}
 14 | {2,1,1}:{0,3,5}       |          0 | {2,1,1}:{0,3,5}
 15 | {2,1,1}:{NVP,3,5}     |            | {2,1,1}:{NVP,3,5}
(7 rows)

select id, MADLIB_SCHEMA.vec_median(a) = MADLIB_SCHEMA.vec_median(a::float8[]),
           MADLIB_SCHEMA.vec_median(b) = MADLIB_SCHEMA.vec_median(b::float8[]) from MADLIB_SCHEMA.test_pairs order by id;
 id | ?column? | ?column? 
----+----------+----------
  0 | t        | t
  1 | t        | t
 11 | t        | t
 12 | t        | t
 13 | t        | 
 14 | t        | t
 15 | t        | 
(7 rows)

select id, a, b, MADLIB_SCHEMA.svec_concat(a,b), a, b from MADLIB_SCHEMA.test_pairs order by id;
 id |          a          |           b           |              svec_concat              |          a          |           b           
----+---------------------+-----------------------+---------------------------------------+---------------------+-----------------------
  0 | {1,100,1}:{5,0,5}   | {50,50,2}:{1,2,10}    | {1,100,1,50,50,2}:{5,0,5,1,2,10}      | {1,100,1}:{5,0,5}   | {50,50,2}:{1,2,10}
  1 | {1,100,1}:{-5,0,-5} | {50,50,2}:{-1,-2,-10} | {1,100,1,50,50,2}:{-5,0,-5,-1,-2,-10} | {1,100,1}:{-5,0,-5} | {50,50,2}:{-1,-2,-10}
 11 | {1}:{0}             | {1}:{1}               | {1,1}:{0,1}                           | {1}:{0}             | {1}:{1}
 12 | {1}:{5}             | {3}:{-8}              | {1,3}:{5,-8}                          | {1}:{5}             | {3}:{-8}
 13 | {1}:{0}             | {1}:{NVP}             | {1,1}:{0,NVP}                         | {1}:{0}             | {1}:{NVP}
 14 | {1,2,1}:{2,4,2}     | {2,1,1}:{0,3,5}       | {1,2,1,2,1,1}:{2,4,2,0,3,5}           | {1,2,1}:{2,4,2}     | {2,1,1}:{0,3,5}
 15 | {1,2,1}:{2,4,2}     | {2,1,1}:{NVP,3,5}     | {1,2,1,2,1,1}:{2,4,2,NVP,3,5}         | {1,2,1}:{2,4,2}     | {2,1,1}:{NVP,3,5}
(7 rows)

select id, MADLIB_SCHEMA.svec_concat_replicate(0, b), b from MADLIB_SCHEMA.test_pairs order by id;
 id | svec_concat_replicate |           b           
----+-----------------------+-----------------------
  0 | {}:{}                 | {50,50,2}:{1,2,10}
  1 | {}:{}                 | {50,50,2}:{-1,-2,-10}
 11 | {}:{}                 | {1}:{1}
 12 | {}:{}                 | {3}:{-8}
 13 | {}:{}                 | {1}:{NVP}
 14 | {}:{}                 | {2,1,1}:{0,3,5}
 15 | {}:{}                 | {2,1,1}:{NVP,3,5}
(7 rows)

select id, MADLIB_SCHEMA.svec_concat_replicate(1, b) = b from MADLIB_SCHEMA.test_pairs order by id;
 id | ?column? 
----+----------
  0 | t
  1 | t
 11 | t
 12 | t
 13 | t
 14 | t
 15 | t
(7 rows)

select id, MADLIB_SCHEMA.svec_concat_replicate(3, b), b from MADLIB_SCHEMA.test_pairs order by id;
 id |                   svec_concat_replicate                   |           b           
----+-----------------------------------------------------------+-----------------------
  0 | {50,50,2,50,50,2,50,50,2}:{1,2,10,1,2,10,1,2,10}          | {50,50,2}:{1,2,10}
  1 | {50,50,2,50,50,2,50,50,2}:{-1,-2,-10,-1,-2,-10,-1,-2,-10} | {50,50,2}:{-1,-2,-10}
 11 | {1,1,1}:{1,1,1}                                           | {1}:{1}
 12 | {3,3,3}:{-8,-8,-8}                                        | {3}:{-8}
 13 | {1,1,1}:{NVP,NVP,NVP}                                     | {1}:{NVP}
 14 | {2,1,1,2,1,1,2,1,1}:{0,3,5,0,3,5,0,3,5}                   | {2,1,1}:{0,3,5}
 15 | {2,1,1,2,1,1,2,1,1}:{NVP,3,5,NVP,3,5,NVP,3,5}             | {2,1,1}:{NVP,3,5}
(7 rows)

-- select id, MADLIB_SCHEMA.svec_concat_replicate(-2, b), b from MADLIB_SCHEMA.test_pairs order by id; -- this should produce error message
select id, MADLIB_SCHEMA.dimension(a), a, MADLIB_SCHEMA.dimension(b), b from MADLIB_SCHEMA.test_pairs order by id;
 id | dimension |          a          | dimension |           b           
----+-----------+---------------------+-----------+-----------------------
  0 |       102 | {1,100,1}:{5,0,5}   |       102 | {50,50,2}:{1,2,10}
  1 |       102 | {1,100,1}:{-5,0,-5} |       102 | {50,50,2}:{-1,-2,-10}
 11 |         1 | {1}:{0}             |         1 | {1}:{1}
 12 |         1 | {1}:{5}             |         3 | {3}:{-8}
 13 |         1 | {1}:{0}             |         1 | {1}:{NVP}
 14 |         4 | {1,2,1}:{2,4,2}     |         4 | {2,1,1}:{0,3,5}
 15 |         4 | {1,2,1}:{2,4,2}     |         4 | {2,1,1}:{NVP,3,5}
(7 rows)

select MADLIB_SCHEMA.svec_lapply('sqrt', null); 
 svec_lapply 
-------------
 
(1 row)

select id, MADLIB_SCHEMA.svec_lapply('sqrt', MADLIB_SCHEMA.svec_lapply('abs', a)), a from MADLIB_SCHEMA.test_pairs order by id;
 id |                   svec_lapply                   |          a          
----+-------------------------------------------------+---------------------
  0 | {1,100,1}:{2.23606797749979,0,2.23606797749979} | {1,100,1}:{5,0,5}
  1 | {1,100,1}:{2.23606797749979,0,2.23606797749979} | {1,100,1}:{-5,0,-5}
 11 | {1}:{0}                                         | {1}:{0}
 12 | {1}:{2.23606797749979}                          | {1}:{5}
 13 | {1}:{0}                                         | {1}:{0}
 14 | {1,2,1}:{1.4142135623731,2,1.4142135623731}     | {1,2,1}:{2,4,2}
 15 | {1,2,1}:{1.4142135623731,2,1.4142135623731}     | {1,2,1}:{2,4,2}
(7 rows)

select id, MADLIB_SCHEMA.svec_lapply('sqrt', MADLIB_SCHEMA.svec_lapply('abs', b)), b from MADLIB_SCHEMA.test_pairs order by id;
 id |                   svec_lapply                   |           b           
----+-------------------------------------------------+-----------------------
  0 | {50,50,2}:{1,1.4142135623731,3.16227766016838}  | {50,50,2}:{1,2,10}
  1 | {50,50,2}:{1,1.4142135623731,3.16227766016838}  | {50,50,2}:{-1,-2,-10}
 11 | {1}:{1}                                         | {1}:{1}
 12 | {3}:{2.82842712474619}                          | {3}:{-8}
 13 | {1}:{NVP}                                       | {1}:{NVP}
 14 | {2,1,1}:{0,1.73205080756888,2.23606797749979}   | {2,1,1}:{0,3,5}
 15 | {2,1,1}:{NVP,1.73205080756888,2.23606797749979} | {2,1,1}:{NVP,3,5}
(7 rows)

select MADLIB_SCHEMA.svec_append(null::MADLIB_SCHEMA.svec, 220::float8, 20::int8); 
 svec_append 
-------------
 {20}:{220}
(1 row)

select id, MADLIB_SCHEMA.svec_append(a, 50, 100), a, MADLIB_SCHEMA.svec_append(b, null, 50), b from MADLIB_SCHEMA.test_pairs order by id;
 id |        svec_append         |          a          |         svec_append          |           b           
----+----------------------------+---------------------+------------------------------+-----------------------
  0 | {1,100,1,100}:{5,0,5,50}   | {1,100,1}:{5,0,5}   | {50,50,2,50}:{1,2,10,NVP}    | {50,50,2}:{1,2,10}
  1 | {1,100,1,100}:{-5,0,-5,50} | {1,100,1}:{-5,0,-5} | {50,50,2,50}:{-1,-2,-10,NVP} | {50,50,2}:{-1,-2,-10}
 11 | {1,100}:{0,50}             | {1}:{0}             | {1,50}:{1,NVP}               | {1}:{1}
 12 | {1,100}:{5,50}             | {1}:{5}             | {3,50}:{-8,NVP}              | {3}:{-8}
 13 | {1,100}:{0,50}             | {1}:{0}             | {1,50}:{NVP,NVP}             | {1}:{NVP}
 14 | {1,2,1,100}:{2,4,2,50}     | {1,2,1}:{2,4,2}     | {2,1,1,50}:{0,3,5,NVP}       | {2,1,1}:{0,3,5}
 15 | {1,2,1,100}:{2,4,2,50}     | {1,2,1}:{2,4,2}     | {2,1,1,50}:{NVP,3,5,NVP}     | {2,1,1}:{NVP,3,5}
(7 rows)

select MADLIB_SCHEMA.svec_proj(a,1), a, MADLIB_SCHEMA.svec_proj(b,1), b from MADLIB_SCHEMA.test_pairs order by id;
 svec_proj |          a          | svec_proj |           b           
-----------+---------------------+-----------+-----------------------
         5 | {1,100,1}:{5,0,5}   |         1 | {50,50,2}:{1,2,10}
        -5 | {1,100,1}:{-5,0,-5} |        -1 | {50,50,2}:{-1,-2,-10}
         0 | {1}:{0}             |         1 | {1}:{1}
         5 | {1}:{5}             |        -8 | {3}:{-8}
         0 | {1}:{0}             |           | {1}:{NVP}
         2 | {1,2,1}:{2,4,2}     |         0 | {2,1,1}:{0,3,5}
         2 | {1,2,1}:{2,4,2}     |           | {2,1,1}:{NVP,3,5}
(7 rows)

-- select MADLIB_SCHEMA.svec_proj(a,2), a, MADLIB_SCHEMA.svec_proj(b,2), b from MADLIB_SCHEMA.test_pairs order by id; -- this should result in an appropriate error message
select MADLIB_SCHEMA.svec_subvec('{1,20,30,10,600,2}:{1,2,3,4,5,6}', 3,69);
      svec_subvec       
------------------------
 {19,30,10,8}:{2,3,4,5}
(1 row)

select MADLIB_SCHEMA.svec_subvec('{1,20,30,10,600,2}:{1,2,3,4,5,6}', 69,3);
      svec_subvec       
------------------------
 {8,10,30,19}:{5,4,3,2}
(1 row)

select MADLIB_SCHEMA.svec_subvec(a,2,4), a from MADLIB_SCHEMA.test_pairs where MADLIB_SCHEMA.dimension(a) >= 4 order by id;
 svec_subvec |          a          
-------------+---------------------
 {3}:{0}     | {1,100,1}:{5,0,5}
 {3}:{0}     | {1,100,1}:{-5,0,-5}
 {2,1}:{4,2} | {1,2,1}:{2,4,2}
 {2,1}:{4,2} | {1,2,1}:{2,4,2}
(4 rows)

select MADLIB_SCHEMA.svec_subvec(a,2,MADLIB_SCHEMA.dimension(a)-1), a from MADLIB_SCHEMA.test_pairs where MADLIB_SCHEMA.dimension(a) >= 2 order by id;
 svec_subvec |          a          
-------------+---------------------
 {100}:{0}   | {1,100,1}:{5,0,5}
 {100}:{0}   | {1,100,1}:{-5,0,-5}
 {2}:{4}     | {1,2,1}:{2,4,2}
 {2}:{4}     | {1,2,1}:{2,4,2}
(4 rows)

-- select MADLIB_SCHEMA.svec_subvec(a,MADLIB_SCHEMA.dimension(a)-1,0), a from MADLIB_SCHEMA.test_pairs where MADLIB_SCHEMA.dimension(a) >= 2 order by id;
select MADLIB_SCHEMA.svec_reverse(a), a, MADLIB_SCHEMA.svec_reverse(b), b from MADLIB_SCHEMA.test_pairs order by id;
    svec_reverse     |          a          |     svec_reverse      |           b           
---------------------+---------------------+-----------------------+-----------------------
 {1,100,1}:{5,0,5}   | {1,100,1}:{5,0,5}   | {2,50,50}:{10,2,1}    | {50,50,2}:{1,2,10}
 {1,100,1}:{-5,0,-5} | {1,100,1}:{-5,0,-5} | {2,50,50}:{-10,-2,-1} | {50,50,2}:{-1,-2,-10}
 {1}:{0}             | {1}:{0}             | {1}:{1}               | {1}:{1}
 {1}:{5}             | {1}:{5}             | {3}:{-8}              | {3}:{-8}
 {1}:{0}             | {1}:{0}             | {1}:{NVP}             | {1}:{NVP}
 {1,2,1}:{2,4,2}     | {1,2,1}:{2,4,2}     | {1,1,2}:{5,3,0}       | {2,1,1}:{0,3,5}
 {1,2,1}:{2,4,2}     | {1,2,1}:{2,4,2}     | {1,1,2}:{5,3,NVP}     | {2,1,1}:{NVP,3,5}
(7 rows)

select MADLIB_SCHEMA.svec_subvec('{1,20,30,10,600,2}:{1,2,3,4,5,6}', 3,69) =
       MADLIB_SCHEMA.svec_reverse(MADLIB_SCHEMA.svec_subvec('{1,20,30,10,600,2}:{1,2,3,4,5,6}', 69,3));
 ?column? 
----------
 t
(1 row)

select MADLIB_SCHEMA.svec_change('{1,20,30,10,600,2}:{1,2,3,4,5,6}', 3, '{2,3}:{4,null}');
                  svec_change                   
------------------------------------------------
 {1,1,2,3,14,30,10,600,2}:{1,2,4,NVP,2,3,4,5,6}
(1 row)

select MADLIB_SCHEMA.svec_change(a,1,'{1}:{-50}'), a from MADLIB_SCHEMA.test_pairs order by id;
     svec_change      |          a          
----------------------+---------------------
 {1,100,1}:{-50,0,5}  | {1,100,1}:{5,0,5}
 {1,100,1}:{-50,0,-5} | {1,100,1}:{-5,0,-5}
 {1}:{-50}            | {1}:{0}
 {1}:{-50}            | {1}:{5}
 {1}:{-50}            | {1}:{0}
 {1,2,1}:{-50,4,2}    | {1,2,1}:{2,4,2}
 {1,2,1}:{-50,4,2}    | {1,2,1}:{2,4,2}
(7 rows)


-- Test the multi-concatenation and show sizes compared with a normal array
drop table if exists corpus_proj;
psql:sql/gp_svec_test.sql:187: NOTICE:  table "corpus_proj" does not exist, skipping
drop table if exists corpus_proj_array;
psql:sql/gp_svec_test.sql:188: NOTICE:  table "corpus_proj_array" does not exist, skipping
create table corpus_proj as (select 10000 *|| ('{45,2,35,4,15,1}:{0,1,0,1,0,2}'::MADLIB_SCHEMA.svec) result ) distributed randomly;
create table corpus_proj_array as (select result::float8[] from corpus_proj) distributed randomly;
-- Calculate on-disk size of sparse vector
select pg_size_pretty(pg_total_relation_size('corpus_proj'));
 pg_size_pretty 
----------------
 192 kB
(1 row)

-- Calculate on-disk size of normal array
select pg_size_pretty(pg_total_relation_size('corpus_proj_array'));
 pg_size_pretty 
----------------
 288 kB
(1 row)

-- Calculate L1 norm from sparse vector
select MADLIB_SCHEMA.l1norm(result) from corpus_proj;
 l1norm 
--------
  80000
(1 row)

-- Calculate L1 norm from float8[]
select MADLIB_SCHEMA.l1norm(result) from corpus_proj_array;
 l1norm 
--------
  80000
(1 row)

-- Calculate L2 norm from sparse vector
select MADLIB_SCHEMA.l2norm(result) from corpus_proj;
      l2norm      
------------------
 316.227766016838
(1 row)

-- Calculate L2 norm from float8[]
select MADLIB_SCHEMA.l2norm(result) from corpus_proj_array;
      l2norm      
------------------
 316.227766016838
(1 row)

drop table corpus_proj;
drop table corpus_proj_array;

-- -- Test the pivot operator 
drop table if exists pivot_test;
psql:sql/gp_svec_test.sql:213: NOTICE:  table "pivot_test" does not exist, skipping
create table pivot_test(a float8) distributed randomly;
insert into pivot_test values (0),(1),(0),(2),(3);
-- select MADLIB_SCHEMA.array_agg(a) from pivot_test;
select MADLIB_SCHEMA.l1norm(MADLIB_SCHEMA.array_agg(a)) from pivot_test;
 l1norm 
--------
      6
(1 row)

drop table if exists pivot_test;
-- Answer should be 5
select MADLIB_SCHEMA.vec_median(MADLIB_SCHEMA.array_agg(a)) from (select generate_series(1,9) a) foo;
 vec_median 
------------
          5
(1 row)

-- Answer should be a 10-wide vector
-- select MADLIB_SCHEMA.array_agg(a) from (select trunc(random()*10) a,generate_series(1,100000) order by a) foo;
-- Average is 4.50034, median is 5
select MADLIB_SCHEMA.vec_median('{9960,9926,10053,9993,10080,10050,9938,9941,10030,10029}:{1,9,8,7,6,5,4,3,2,0}'::MADLIB_SCHEMA.svec);
 vec_median 
------------
          5
(1 row)

select MADLIB_SCHEMA.vec_median('{9960,9926,10053,9993,10080,10050,9938,9941,10030,10029}:{1,9,8,7,6,5,4,3,2,0}'::MADLIB_SCHEMA.svec::float8[]);
 vec_median 
------------
          5
(1 row)

