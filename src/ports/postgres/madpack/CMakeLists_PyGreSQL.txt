project(PyGreSQL)
cmake_minimum_required(VERSION 2.8)
include(OSXUtils)

if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE Release CACHE STRING
      "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel."
      FORCE)
endif(NOT CMAKE_BUILD_TYPE)

find_package(PostgreSQL)
include_directories(${POSTGRESQL_CLIENT_INCLUDE_DIR})
include_directories(${POSTGRESQL_SERVER_INCLUDE_DIR})

find_package(PythonLibs)
include_directories(${PYTHON_INCLUDE_DIRS})

add_library(pygresql MODULE pgmodule.c)

add_library(pg SHARED IMPORTED)
set_target_properties(pg PROPERTIES
    IMPORTED_LOCATION "${POSTGRESQL_BASE_DIR}/lib/${CMAKE_SHARED_LIBRARY_PREFIX}pq${CMAKE_SHARED_LIBRARY_SUFFIX}")
target_link_libraries(pygresql pg)
add_dependencies(pygresql pg)

set_target_properties(pygresql PROPERTIES
    PREFIX ""
    OUTPUT_NAME "_pg"
)

# We are not interested in PyGreSQL compilation warnings. Only care about gcc here
if(CMAKE_COMPILER_IS_GNUCC)
    set(CMAKE_C_FLAGS "-w")
endif(CMAKE_COMPILER_IS_GNUCC)

# Directory we will use for patches
# The following is copied from setup.py
message(STATUS "Creating copy of the PostgreSQL server header files where all features not necessary for PyGreSQL are disabled")
set(PATCH_DIR ${CMAKE_CURRENT_BINARY_DIR}/patch)
file(COPY ${POSTGRESQL_CLIENT_INCLUDE_DIR}/pg_config.h DESTINATION
    ${PATCH_DIR})
file(APPEND ${PATCH_DIR}/pg_config.h
    "
    #undef ENABLE_NLS
    #undef USE_REPL_SNPRINTF
    #undef USE_SSL
    #undef USE_ZLIB
    #undef HAVE_STDINT_H
    #undef HAVE_SYS_TIME_H
    #undef HAVE_UNISTD_H
    #define _CRT_SECURE_NO_WARNINGS 1
    #define _USE_32BIT_TIME_T 1
    "
)
# Append directory with patched header file at beginning
include_directories(BEFORE ${PATCH_DIR})

if(APPLE)
    set_target_properties(pygresql PROPERTIES
        LINK_FLAGS "-undefined dynamic_lookup"
        OSX_ARCHITECTURES "i386;ppc;x86_64"
    )
endif(APPLE)

add_custom_command(OUTPUT __init__.py
    COMMAND ${CMAKE_COMMAND} -E touch __init__.py
    COMMENT "Creating __init__.py file."
)
add_custom_target(pythonFile ALL DEPENDS __init__.py)

install(TARGETS pygresql
    LIBRARY DESTINATION pygresql
)

install(FILES __init__.py pg.py pgdb.py
    DESTINATION pygresql
)
