---------------------------------------------------------------------------
-- Install-check Rules: 
-- --------------------
-- 1) Any DB objects should be created w/o schema prefix,
--    since this test file is executed in a separate schema context.
-- 2) There should be no uncommented DROP statements in this script. All objects 
--    created in the default schema will be cleaned-up outside of this script.
-- 3) For all other install-check rules please refer to:
--    https://github.com/madlib/madlib/wiki/Unit-Test-Guide
---------------------------------------------------------------------------

---------------------------------------------------------------------------
-- Setup: 
---------------------------------------------------------------------------
CREATE FUNCTION run_some_non_select_stmnts() 
RETURNS TEXT AS $$ 
DECLARE
    rand  TEXT;
BEGIN

    SELECT INTO rand round( random() * 10000)::TEXT;
    
    EXECUTE 'CREATE TEMP TABLE __madlib_compatibility_test_table_' || rand || '
    AS SELECT generate_series(1,100) as x';

    RETURN 'Created __madlib_gp_compat_table_' || rand;
    
END $$ 
LANGUAGE plpgsql VOLATILE;

---------------------------------------------------------------------------
-- Test
---------------------------------------------------------------------------
--
-- create_table_as()
--
SELECT MADLIB_SCHEMA.create_table_as( 
    '__madlib_gp_compat_table_1', 
    $$ SELECT * FROM run_some_non_select_stmnts() as x $$
);

SELECT MADLIB_SCHEMA.create_table_as( 
    '__madlib_gp_compat_table_2', 
    $$ SELECT * FROM run_some_non_select_stmnts() as x $$,
    'by (x)'
);

--
-- create_temp_table_as()
--
SELECT MADLIB_SCHEMA.create_temp_table_as( 
    '__madlib_gp_compat_temp_table_1', 
    $$ SELECT * FROM run_some_non_select_stmnts() as x $$
);

SELECT MADLIB_SCHEMA.create_temp_table_as( 
    '__madlib_gp_compat_temp_table_2', 
    $$ SELECT * FROM run_some_non_select_stmnts() as x $$,
    'by (x)'
);

--
-- create_temporary_table_as()
--
SELECT MADLIB_SCHEMA.create_temporary_table_as( 
    '__madlib_gp_compat_temporary_table_1', 
    $$ SELECT * FROM run_some_non_select_stmnts() as x $$
);

SELECT MADLIB_SCHEMA.create_temporary_table_as( 
    '__madlib_gp_compat_temporary_table_2', 
    $$ SELECT * FROM run_some_non_select_stmnts() as x $$,
    'by (x)'
);
